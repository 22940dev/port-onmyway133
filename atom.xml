<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>onmyway133</title>
  
  <subtitle>What you don&#39;t know is what you haven&#39;t learned</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://onmyway133.github.io/"/>
  <updated>2019-09-08T19:48:56.000Z</updated>
  <id>https://onmyway133.github.io/</id>
  
  <author>
    <name>Khoa Pham</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to use NSStepper in Appkit</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-NSStepper-in-Appkit/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-NSStepper-in-Appkit/</id>
    <published>2019-09-08T19:48:50.000Z</published>
    <updated>2019-09-08T19:48:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/409" target="_blank" rel="noopener">#409</a></strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> stepper = <span class="type">NSStepper</span>()</span><br><span class="line"><span class="keyword">let</span> textField = <span class="type">NSTextField</span>(wrappingLabelWithString: <span class="string">"\(myLocalCount)"</span>)</span><br><span class="line"></span><br><span class="line">stepper.integerValue = myLocalCount</span><br><span class="line">stepper.minValue = <span class="number">5</span></span><br><span class="line">stepper.maxValue = <span class="number">24</span></span><br><span class="line">stepper.valueWraps = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">stepper.target = <span class="keyword">self</span></span><br><span class="line">stepper.action = #selector(onStepperChange(<span class="number">_</span>:))</span><br><span class="line"></span><br><span class="line"><span class="meta">@objc</span> <span class="function"><span class="keyword">func</span> <span class="title">onStepperChange</span><span class="params">(<span class="number">_</span> sender: NSStepper)</span></span> &#123;</span><br><span class="line">    myLocalCount = sender.integerValue</span><br><span class="line">    textField.stringValue = <span class="string">"\(sender.integerValue)"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/409&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#409&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to handle shortcut in AppKit</title>
    <link href="https://onmyway133.github.io/blog/How-to-handle-shortcut-in-AppKit/"/>
    <id>https://onmyway133.github.io/blog/How-to-handle-shortcut-in-AppKit/</id>
    <published>2019-09-08T17:51:23.000Z</published>
    <updated>2019-09-08T17:51:29.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/408" target="_blank" rel="noopener">#408</a></strong></p><p><code>Podfile</code></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod <span class="string">'MASShortcut'</span></span><br></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> shortcut = <span class="type">MASShortcut</span>(keyCode: kVK_ANSI_K, modifierFlags: [.command, .shift])</span><br><span class="line"></span><br><span class="line"><span class="type">MASShortcutMonitor</span>.shared()?.register(shortcut, withAction: &#123;</span><br><span class="line">    <span class="keyword">self</span>.showPopover(sender: <span class="keyword">self</span>.statusItem.button)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/408&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#408&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Podfi
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to select file in its directory in AppKit</title>
    <link href="https://onmyway133.github.io/blog/How-to-select-file-in-its-directory-in-AppKit/"/>
    <id>https://onmyway133.github.io/blog/How-to-select-file-in-its-directory-in-AppKit/</id>
    <published>2019-09-07T19:14:41.000Z</published>
    <updated>2019-09-07T19:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/407" target="_blank" rel="noopener">#407</a></strong></p><p><a href="https://developer.apple.com/documentation/appkit/nsworkspace/1524399-selectfile" target="_blank" rel="noopener">https://developer.apple.com/documentation/appkit/nsworkspace/1524399-selectfile</a></p><blockquote><p>In macOS 10.5 and later, this method does not follow symlinks when selecting the file. If the fullPath parameter contains any symlinks, this method selects the symlink instead of the file it targets. If you want to select the target file, use the resolvingSymlinksInPath method to resolve any symlinks before calling this method.</p></blockquote><blockquote><p>It is safe to call this method from any thread of your app.</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">NSWorkspace</span>.shared.selectFile(</span><br><span class="line">    url.path,</span><br><span class="line">    inFileViewerRootedAtPath: url.deletingLastPathComponent().path)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/407&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#407&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to use NSProgressIndicator in AppKit</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-NSProgressIndicator-in-AppKit/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-NSProgressIndicator-in-AppKit/</id>
    <published>2019-09-07T18:51:52.000Z</published>
    <updated>2019-09-07T18:51:59.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/406" target="_blank" rel="noopener">#406</a></strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> progressIndicator = <span class="type">NSProgressIndicator</span>()</span><br><span class="line">progressIndicator.isIndeterminate = <span class="literal">true</span></span><br><span class="line">progressIndicator.style = .spinning</span><br><span class="line">progressIndicator.startAnimation(<span class="literal">nil</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/406&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#406&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to show save panel in AppKit</title>
    <link href="https://onmyway133.github.io/blog/How-to-show-save-panel-in-AppKit/"/>
    <id>https://onmyway133.github.io/blog/How-to-show-save-panel-in-AppKit/</id>
    <published>2019-09-07T17:36:00.000Z</published>
    <updated>2019-09-07T17:36:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/405" target="_blank" rel="noopener">#405</a></strong></p><p>Enable <code>Read/Write</code> for <code>User Selected File</code> under <code>Sandbox</code> to avoid bridge absent error</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">save</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> panel = <span class="type">NSSavePanel</span>()</span><br><span class="line">    <span class="comment">// 3</span></span><br><span class="line">    panel.directoryURL = <span class="type">FileManager</span>.<span class="keyword">default</span>.homeDirectoryForCurrentUser</span><br><span class="line">    <span class="comment">// 4</span></span><br><span class="line">    panel.nameFieldStringValue = <span class="string">"abc.gif"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> window = view.window <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    panel.beginSheetModal(<span class="keyword">for</span>: window) &#123; (result) <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">guard</span> result == .<span class="type">OK</span>, <span class="keyword">let</span> url = panel.url <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.showAlert()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">showAlert</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> alert = <span class="type">NSAlert</span>()</span><br><span class="line">    alert.messageText = <span class="string">"Hello world"</span></span><br><span class="line">    alert.informativeText = <span class="string">"Information text"</span></span><br><span class="line">    alert.addButton(withTitle: <span class="string">"OK"</span>)</span><br><span class="line">    alert.addButton(withTitle: <span class="string">"Cancel"</span>)</span><br><span class="line">    alert.runModal()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://www.raywenderlich.com/666-filemanager-class-tutorial-for-macos-getting-started-with-the-file-system" target="_blank" rel="noopener">https://www.raywenderlich.com/666-filemanager-class-tutorial-for-macos-getting-started-with-the-file-system</a></li><li><a href="https://stackoverflow.com/questions/47954418/using-cocoa-nssavepanel-in-sandbox-causes-assertion-failure" target="_blank" rel="noopener">https://stackoverflow.com/questions/47954418/using-cocoa-nssavepanel-in-sandbox-causes-assertion-failure</a></li><li><a href="https://stackoverflow.com/questions/18417432/how-to-show-alert-pop-up-in-in-cocoa" target="_blank" rel="noopener">https://stackoverflow.com/questions/18417432/how-to-show-alert-pop-up-in-in-cocoa</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/405&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#405&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Enable &lt;cod
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to animate NSView using keyframe</title>
    <link href="https://onmyway133.github.io/blog/How-to-animate-NSView-using-keyframe/"/>
    <id>https://onmyway133.github.io/blog/How-to-animate-NSView-using-keyframe/</id>
    <published>2019-09-06T17:58:42.000Z</published>
    <updated>2019-09-06T17:58:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/404" target="_blank" rel="noopener">#404</a></strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> animation = <span class="type">CAKeyframeAnimation</span>(keyPath: <span class="string">"position.y"</span>)</span><br><span class="line">animation.values = [<span class="number">50</span>, <span class="number">20</span>, <span class="number">50</span>]</span><br><span class="line">animation.keyTimes = [<span class="number">0.0</span>, <span class="number">0.5</span>, <span class="number">1.0</span>]</span><br><span class="line">animation.duration = <span class="number">2</span></span><br><span class="line">animation.repeatCount = <span class="type">Float</span>.greatestFiniteMagnitude</span><br><span class="line">animation.autoreverses = <span class="literal">true</span></span><br><span class="line">myView.wantsLayer = <span class="literal">true</span></span><br><span class="line">myView.layer?.add(animation, forKey: <span class="string">"bounce"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/404&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#404&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to quit macOS on last window closed</title>
    <link href="https://onmyway133.github.io/blog/How-to-quit-macOS-on-last-window-closed/"/>
    <id>https://onmyway133.github.io/blog/How-to-quit-macOS-on-last-window-closed/</id>
    <published>2019-09-06T09:13:14.000Z</published>
    <updated>2019-09-06T09:13:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/403" target="_blank" rel="noopener">#403</a></strong></p><p><a href="https://developer.apple.com/documentation/appkit/nsapplicationdelegate/1428381-applicationshouldterminateafterl?language=objc" target="_blank" rel="noopener">https://developer.apple.com/documentation/appkit/nsapplicationdelegate/1428381-applicationshouldterminateafterl?language=objc</a></p><blockquote><p>The application sends this message to your delegate when the application’s last window is closed. It sends this message regardless of whether there are still panels open. (A panel in this case is defined as being an instance of NSPanel or one of its subclasses.)</p></blockquote><blockquote><p>If your implementation returns NO, control returns to the main event loop and the application is not terminated. If you return YES, your delegate’s applicationShouldTerminate: method is subsequently invoked to confirm that the application should be terminated.</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">applicationShouldTerminateAfterLastWindowClosed</span><span class="params">(<span class="number">_</span> sender: NSApplication)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/403&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#403&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to test Date with timezone aware in Swift</title>
    <link href="https://onmyway133.github.io/blog/How-to-test-Date-with-timezone-aware-in-Swift/"/>
    <id>https://onmyway133.github.io/blog/How-to-test-Date-with-timezone-aware-in-Swift/</id>
    <published>2019-09-06T07:03:02.000Z</published>
    <updated>2019-09-06T07:11:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/402" target="_blank" rel="noopener">#402</a></strong></p><p>I want to test if a date has passed another date</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> base =  <span class="type">Date</span>(timeIntervalSince1970: <span class="number">1567756697</span>)</span><br><span class="line"><span class="type">XCTAssertEqual</span>(validator.hasPassed(event: event, date: base), <span class="literal">true</span>)</span><br></pre></td></tr></table></figure><p>My <code>hasPassed</code> is using Calendar.current</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minuteSinceMidnight</span><span class="params">(date: Date)</span></span> -&gt; <span class="type">MinuteSinceMidnight</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> calendar = <span class="type">Calendar</span>.current</span><br><span class="line">    <span class="keyword">let</span> start = calendar.startOfDay(<span class="keyword">for</span>: date)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">Int</span>(date.timeIntervalSince(start)) / <span class="number">60</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>But the minute is always having timezone applied. Even if I try with <code>DateComponents</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minuteSinceMidnight</span><span class="params">(date: Date)</span></span> -&gt; <span class="type">MinuteSinceMidnight</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> components = calendar.dateComponents([.hour, .minute], from: date)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> hour = components.hour, <span class="keyword">let</span> minute = components.minute <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> hour * <span class="number">60</span> + minute</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>As long as I use <code>Calendar</code>, it always has timezone applied.</p><p>Checking this time interval <code>1567756697</code> on <a href="https://www.epochconverter.com/" target="_blank" rel="noopener">https://www.epochconverter.com/</a></p><blockquote><p>Assuming that this timestamp is in seconds:<br>GMT: Friday, September 6, 2019 7:58:17 PM<br>Your time zone: Friday, September 6, 2019 9:58:17 PM GMT+02:00 DST</p></blockquote><p>Because I have GMT+2, there will always be 2 hours offset. This works in app, but not in test because of the way I construct Date with time interval.</p><p>One way is to have test data using string construction, and provide timezone to <code>DateFormatter</code></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> formatter = <span class="type">ISO8601DateFormatter</span>()</span><br><span class="line"><span class="keyword">let</span> date = formatter.date(from: <span class="string">"2019-07-58T12:39:00Z"</span>)</span><br><span class="line"><span class="keyword">let</span> string = formatter.string(from: <span class="type">Date</span>())</span><br></pre></td></tr></table></figure><p>Another way is to have a fixed timezone for Calendar</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> calendar = <span class="type">Calendar</span>.current</span><br><span class="line">calendar.timeZone = <span class="type">TimeZone</span>(secondsFromGMT: <span class="number">0</span>)!</span><br></pre></td></tr></table></figure><p>Another way is to adjust existing date</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calendar.date(bySettingHour: <span class="number">20</span>, minute: <span class="number">02</span>, second: <span class="number">00</span>, of: <span class="type">Date</span>()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/402&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#402&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I want to t
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="iOS" scheme="https://onmyway133.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>How to sign executable for sandbox</title>
    <link href="https://onmyway133.github.io/blog/How-to-sign-executable-for-sandbox/"/>
    <id>https://onmyway133.github.io/blog/How-to-sign-executable-for-sandbox/</id>
    <published>2019-09-05T10:04:10.000Z</published>
    <updated>2019-09-06T03:34:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/401" target="_blank" rel="noopener">#401</a></strong></p><p>Find identity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">security find-identity</span><br></pre></td></tr></table></figure><p>Sign with entitlements and identity. For macOS, use <code>3rd Party Mac Developer Application</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign -f -s &quot;3rd Party Mac Developer Application: Khoa Pham (123DK123F2)&quot; --entitlements &quot;MyApp.entitlements&quot; &quot;tool/mytool&quot;</span><br></pre></td></tr></table></figure><p>To enable harden runtime</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">codesign --verbose --force --deep -o runtime --sign</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/401&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#401&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Find identi
      
    
    </summary>
    
    
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to make simple traffic simulation in Javascript</title>
    <link href="https://onmyway133.github.io/blog/How-to-make-simple-traffic-simulation-in-Javascript/"/>
    <id>https://onmyway133.github.io/blog/How-to-make-simple-traffic-simulation-in-Javascript/</id>
    <published>2019-09-05T07:14:24.000Z</published>
    <updated>2019-09-05T07:14:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/400" target="_blank" rel="noopener">#400</a></strong></p><ul><li>Use prototype.js for inheritance</li><li>Use enchant.js for 2d game logic</li><li>Code <a href="https://github.com/onmyway133/traffic_simulator" target="_blank" rel="noopener">https://github.com/onmyway133/traffic_simulator</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/400&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#400&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use p
      
    
    </summary>
    
    
    
      <category term="javascript" scheme="https://onmyway133.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>How to make collaborative drawing canvas with socketio and node</title>
    <link href="https://onmyway133.github.io/blog/How-to-make-collaborative-drawing-canvas-with-socketio-and-node/"/>
    <id>https://onmyway133.github.io/blog/How-to-make-collaborative-drawing-canvas-with-socketio-and-node/</id>
    <published>2019-09-05T07:10:35.000Z</published>
    <updated>2019-09-05T07:11:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/399" target="_blank" rel="noopener">#399</a></strong></p><h2 id="Client"><a href="#Client" class="headerlink" title="Client"></a>Client</h2><ul><li>Use <a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener">https://github.com/facebook/create-react-app</a></li></ul><p><code>App.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">'./logo.svg'</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">'./App.css'</span>;</span><br><span class="line"><span class="keyword">import</span> Main <span class="keyword">from</span> <span class="string">'./Main'</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">Main</span> /&gt;</span></span></span><br><span class="line"><span class="xml">  &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">export default App;</span></span><br></pre></td></tr></table></figure><p><code>Main.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @flow</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; withStyles &#125; <span class="keyword">from</span> <span class="string">'@material-ui/core/styles'</span>;</span><br><span class="line"><span class="keyword">import</span> AppBar <span class="keyword">from</span> <span class="string">'@material-ui/core/AppBar'</span>;</span><br><span class="line"><span class="keyword">import</span> Toolbar <span class="keyword">from</span> <span class="string">'@material-ui/core/Toolbar'</span>;</span><br><span class="line"><span class="keyword">import</span> Typography <span class="keyword">from</span> <span class="string">'@material-ui/core/Typography'</span>;</span><br><span class="line"><span class="keyword">import</span> Button <span class="keyword">from</span> <span class="string">'@material-ui/core/Button'</span>;</span><br><span class="line"><span class="keyword">import</span> IconButton <span class="keyword">from</span> <span class="string">'@material-ui/core/IconButton'</span>;</span><br><span class="line"><span class="keyword">import</span> MenuIcon <span class="keyword">from</span> <span class="string">'@material-ui/icons/Menu'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Manager <span class="keyword">from</span> <span class="string">'./Manager'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> styles = &#123;</span><br><span class="line">    root: &#123;</span><br><span class="line">      flexGrow: <span class="number">1</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    grow: &#123;</span><br><span class="line">      flexGrow: <span class="number">1</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    menuButton: &#123;</span><br><span class="line">      marginLeft: <span class="number">-12</span>,</span><br><span class="line">      marginRight: <span class="number">20</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">        classes: PropTypes.object.isRequired,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; classes &#125; = <span class="keyword">this</span>.props;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=&#123;classes.root&#125;&gt;</span><br><span class="line">              &lt;AppBar position=<span class="string">"static"</span>&gt;</span><br><span class="line">                &lt;Toolbar&gt;</span><br><span class="line">                  &lt;IconButton className=&#123;classes.menuButton&#125; color=<span class="string">"inherit"</span> aria-label=<span class="string">"Menu"</span>&gt;</span><br><span class="line">                    &lt;MenuIcon /&gt;</span><br><span class="line">                  &lt;<span class="regexp">/IconButton&gt;</span></span><br><span class="line"><span class="regexp">                  &lt;Typography variant="h6" color="inherit" className=&#123;classes.grow&#125;&gt;</span></span><br><span class="line"><span class="regexp">                    Collaborate Canvas</span></span><br><span class="line"><span class="regexp">                  &lt;/</span>Typography&gt;</span><br><span class="line">                  &lt;Button color=<span class="string">"inherit"</span> onClick=&#123;<span class="keyword">this</span>.onImagePress&#125; &gt;Image&lt;<span class="regexp">/Button&gt;</span></span><br><span class="line"><span class="regexp">                  &lt;Button color="inherit" onClick=&#123;this.onClearPress&#125; &gt;Clear&lt;/</span>Button&gt;</span><br><span class="line">                  &lt;input ref=<span class="string">"fileInput"</span> type=<span class="string">"file"</span> id=<span class="string">"myFile"</span> multiple accept=<span class="string">"image/*"</span> style=&#123;&#123;<span class="attr">display</span>: <span class="string">'none'</span>&#125;&#125; onChange=&#123;<span class="keyword">this</span>.handleFiles&#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span></span><br><span class="line">                &lt;<span class="regexp">/Toolbar&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>AppBar&gt;</span><br><span class="line">              &lt;canvas ref=<span class="string">"canvas"</span> <span class="keyword">with</span>=<span class="string">"1000"</span> height=<span class="string">"1000"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        )</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    componentDidMount() &#123;</span></span><br><span class="line"><span class="regexp">      const canvas = this.refs.canvas</span></span><br><span class="line"><span class="regexp">      this.manager = new Manager(canvas)</span></span><br><span class="line"><span class="regexp">      this.manager.connect()</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    onImagePress = () =&gt; &#123;</span></span><br><span class="line"><span class="regexp">      const fileInput = this.refs.fileInput</span></span><br><span class="line"><span class="regexp">      fileInput.click()</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    onClearPress = () =&gt; &#123;</span></span><br><span class="line"><span class="regexp">      this.manager.clear()</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    handleFiles = (e) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">      e.persist()</span></span><br><span class="line"><span class="regexp">      const canvas = this.refs.canvas</span></span><br><span class="line"><span class="regexp">      const context = canvas.getContext('2d')</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      const file = e.target.files[0]</span></span><br><span class="line"><span class="regexp">      var image = new Image()</span></span><br><span class="line"><span class="regexp">      image.onload = function() &#123;</span></span><br><span class="line"><span class="regexp">          context.drawImage(image, 0, 0, window.innerWidth, window.innerHeight)</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      image.src = URL.createObjectURL(file)</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default withStyles(styles)(Main);</span></span><br></pre></td></tr></table></figure><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><p>Use <code>express</code> and <code>socket.io</code></p><p><code>index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @flow</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line"><span class="keyword">const</span> socketIO = <span class="built_in">require</span>(<span class="string">'socket.io'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.createServer(app)</span><br><span class="line"><span class="keyword">const</span> io = socketIO.listen(server)</span><br><span class="line">server.listen(<span class="number">3001</span>)</span><br><span class="line">app.use(express.static(__dirname + <span class="string">'/public'</span>))</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Server running on 127.0.0.1:8080"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> lines = []</span><br><span class="line">io.on(<span class="string">'connection'</span>, (socket) =&gt; &#123;</span><br><span class="line">    lines.forEach(<span class="function">(<span class="params">line</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> data = &#123; line &#125;</span><br><span class="line">        socket.emit(<span class="string">'draw_line'</span>, data) </span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    socket.on(<span class="string">'draw_line'</span>, (data) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; line &#125; = data</span><br><span class="line">        lines.push(line)</span><br><span class="line"></span><br><span class="line">        io.emit(<span class="string">'draw_line'</span>, data)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    socket.on(<span class="string">'clear'</span>, () =&gt; &#123;</span><br><span class="line">        lines = []</span><br><span class="line">        io.emit(<span class="string">'clear'</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    socket.on(<span class="string">'draw_image'</span>, (data) =&gt; &#123;</span><br><span class="line">        io.emit(<span class="string">'draw_image'</span>, data)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/399&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#399&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;Client
      
    
    </summary>
    
    
    
      <category term="javascript" scheme="https://onmyway133.github.io/tags/javascript/"/>
    
      <category term="node" scheme="https://onmyway133.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>How to generate changelog for GitHub releases with rxjs and node</title>
    <link href="https://onmyway133.github.io/blog/How-to-generate-changelog-for-GitHub-releases-with-rxjs-and-node/"/>
    <id>https://onmyway133.github.io/blog/How-to-generate-changelog-for-GitHub-releases-with-rxjs-and-node/</id>
    <published>2019-09-05T07:03:12.000Z</published>
    <updated>2019-09-05T07:11:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/398" target="_blank" rel="noopener">#398</a></strong></p><h2 id="How-to"><a href="#How-to" class="headerlink" title="How to"></a>How to</h2><ul><li>Use <a href="https://github.com/onmyway133/github-changelogs-maker" target="_blank" rel="noopener">https://github.com/onmyway133/github-changelogs-maker</a></li><li>Generate personal access token <a href="https://github.com/settings/tokens" target="_blank" rel="noopener">https://github.com/settings/tokens</a></li></ul><h2 id="Technical"><a href="#Technical" class="headerlink" title="Technical"></a>Technical</h2><p>Dependencies</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Rx = <span class="built_in">require</span>(<span class="string">'rxjs/Rx'</span>)</span><br><span class="line"><span class="keyword">const</span> Fetch = <span class="built_in">require</span>(<span class="string">'node-fetch'</span>)</span><br><span class="line"><span class="keyword">const</span> Minimist = <span class="built_in">require</span>(<span class="string">'minimist'</span>)</span><br><span class="line"><span class="keyword">const</span> Fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br></pre></td></tr></table></figure><p>Use GraphQL</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">makeOptions(query, token) &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    method: <span class="string">'POST'</span>,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      <span class="string">'Content-Type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">      <span class="string">'Authorization'</span>: <span class="string">`bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">    &#125;,</span><br><span class="line">    body: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">      query: <span class="string">`</span></span><br><span class="line"><span class="string">      query &#123;</span></span><br><span class="line"><span class="string">        repository(owner: "<span class="subst">$&#123;<span class="keyword">this</span>.owner&#125;</span>", name: "<span class="subst">$&#123;<span class="keyword">this</span>.repo&#125;</span>") &#123;</span></span><br><span class="line"><span class="string">          <span class="subst">$&#123;query&#125;</span></span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      `</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Use orderBy</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">fetchPRsAndIssues(dates) &#123;</span><br><span class="line">    <span class="keyword">const</span> query = <span class="string">`</span></span><br><span class="line"><span class="string">    pullRequests(last: 100, orderBy: &#123;field: UPDATED_AT, direction: ASC&#125;) &#123;</span></span><br><span class="line"><span class="string">      edges &#123;</span></span><br><span class="line"><span class="string">        node &#123;</span></span><br><span class="line"><span class="string">          title</span></span><br><span class="line"><span class="string">          merged</span></span><br><span class="line"><span class="string">          mergedAt</span></span><br><span class="line"><span class="string">          url</span></span><br><span class="line"><span class="string">          author &#123;</span></span><br><span class="line"><span class="string">            login</span></span><br><span class="line"><span class="string">            url</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    issues(last: 100, orderBy: &#123;field: UPDATED_AT, direction: ASC&#125;) &#123;</span></span><br><span class="line"><span class="string">      edges &#123;</span></span><br><span class="line"><span class="string">        node &#123;</span></span><br><span class="line"><span class="string">          title</span></span><br><span class="line"><span class="string">          closed</span></span><br><span class="line"><span class="string">          updatedAt</span></span><br><span class="line"><span class="string">          url</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/398&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#398&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;How-to
      
    
    </summary>
    
    
    
      <category term="javascript" scheme="https://onmyway133.github.io/tags/javascript/"/>
    
      <category term="node" scheme="https://onmyway133.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>How to do launch screen in Android</title>
    <link href="https://onmyway133.github.io/blog/How-to-do-launch-screen-in-Android/"/>
    <id>https://onmyway133.github.io/blog/How-to-do-launch-screen-in-Android/</id>
    <published>2019-09-04T18:24:36.000Z</published>
    <updated>2019-09-04T18:24:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/397" target="_blank" rel="noopener">#397</a></strong></p><blockquote><p>We recommend that, rather than disabling the preview window, you follow the common Material Design patterns. You can use the activity’s windowBackground theme attribute to provide a simple custom drawable for the starting activity.</p></blockquote><p><code>styles.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"LaunchTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.NoActionBar"</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowBackground"</span>&gt;</span>@drawable/launch_background<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Set <code>android:theme=&quot;@style/LaunchTheme&quot;</code> to <code>activity</code> element</p><p><code>AndroidManifest.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">package</span>=<span class="string">"com.onmyway133.whatsupintech"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">".MyApplication"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:name</span>=<span class="string">".features.main.MainActivity"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:theme</span>=<span class="string">"@style/LaunchTheme"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>MainActivity.kt</code></p><figure class="highlight kt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> : <span class="type">AppCompatActivity</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">(savedInstanceState: <span class="type">Bundle</span>?)</span></span> &#123;</span><br><span class="line">        setTheme(R.style.AppTheme_NoActionBar)</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState)</span><br><span class="line">        setContentView(R.layout.main_activity)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://android.jlelse.eu/the-complete-android-splash-screen-guide-c7db82bce565" target="_blank" rel="noopener">The Complete Android Splash Screen Guide</a></li><li><a href="https://developer.android.com/topic/performance/vitals/launch-time#themed" target="_blank" rel="noopener">Themed launch screens</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/397&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#397&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="android" scheme="https://onmyway133.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>How to add header to NavigationView in Android</title>
    <link href="https://onmyway133.github.io/blog/How-to-add-header-to-NavigationView-in-Android/"/>
    <id>https://onmyway133.github.io/blog/How-to-add-header-to-NavigationView-in-Android/</id>
    <published>2019-09-04T18:07:02.000Z</published>
    <updated>2019-09-04T18:07:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/396" target="_blank" rel="noopener">#396</a></strong></p><p>Use <code>app:headerLayout</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.google.android.material.navigation.NavigationView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/navigationView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">"start"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:menu</span>=<span class="string">"@menu/drawer_menu"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:itemIconTint</span>=<span class="string">"@color/title"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:itemTextColor</span>=<span class="string">"@color/title"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:headerLayout</span>=<span class="string">"@layout/navigation_header"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><code>navigation_header.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.AppCompatImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@drawable/icon"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/396&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#396&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;a
      
    
    </summary>
    
    
    
      <category term="android" scheme="https://onmyway133.github.io/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>How to do simple analytics in iOS</title>
    <link href="https://onmyway133.github.io/blog/How-to-do-simple-analytics-in-iOS/"/>
    <id>https://onmyway133.github.io/blog/How-to-do-simple-analytics-in-iOS/</id>
    <published>2019-09-04T10:03:45.000Z</published>
    <updated>2019-09-04T10:07:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/395" target="_blank" rel="noopener">#395</a></strong></p><p>Prefer static enum to avoid repetition and error. The Log should have methods with all required fields so the call site is as simple as possible. How to format and assign parameters is encapsulated in this Analytics.</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"><span class="keyword">import</span> Firebase</span><br><span class="line"><span class="keyword">import</span> FirebaseAnalytics</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Analytics</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Parameter</span>: <span class="title">String</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> studentId = <span class="string">"student_id"</span></span><br><span class="line">        <span class="keyword">case</span> classId = <span class="string">"class_id"</span></span><br><span class="line">        <span class="keyword">case</span> url = <span class="string">"url"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Property</span>: <span class="title">String</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> grantLocation = <span class="string">"grant_location"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Name</span>: <span class="title">String</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> login</span><br><span class="line">        <span class="keyword">case</span> logOut = <span class="string">"log_out"</span></span><br><span class="line">        <span class="keyword">case</span> enroll</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Log</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">log</span><span class="params">(<span class="number">_</span> name: Name, parameters: [Parameter: String] = [:])</span></span> &#123;</span><br><span class="line">            <span class="keyword">let</span> mapped: [<span class="type">String</span>: <span class="type">String</span>] = <span class="type">Dictionary</span>(uniqueKeysWithValues: parameters.<span class="built_in">map</span>(&#123; key, value <span class="keyword">in</span></span><br><span class="line">                <span class="keyword">return</span> (key.rawValue, value)</span><br><span class="line">            &#125;))</span><br><span class="line"></span><br><span class="line">            <span class="type">FirebaseAnalytics</span>.<span class="type">Analytics</span>.logEvent(name.rawValue, parameters: mapped)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">set</span><span class="params">(userId: String?)</span></span> &#123;</span><br><span class="line">            <span class="type">FirebaseAnalytics</span>.<span class="type">Analytics</span>.setUserID(userId)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">setProperty</span><span class="params">(<span class="number">_</span> property: Property, value: String)</span></span> &#123;</span><br><span class="line">            <span class="type">FirebaseAnalytics</span>.<span class="type">Analytics</span>.setUserProperty(value, forName: property.rawValue)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> log = <span class="type">Log</span>()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Analytics</span>.<span class="title">Log</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">grantLocation</span><span class="params">(hasGranted: Bool)</span></span> &#123;</span><br><span class="line">        setProperty(.grantLocation, value: hasGranted.<span class="built_in">toString</span>())</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">login</span><span class="params">(userId: String)</span></span> &#123;</span><br><span class="line">        log(.login)</span><br><span class="line">        <span class="keyword">set</span>(userId: userId)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">logOut</span><span class="params">()</span></span> &#123;</span><br><span class="line">        log(.logOut)</span><br><span class="line">        <span class="keyword">set</span>(userId: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">enroll</span><span class="params">(classId: String)</span></span> &#123;</span><br><span class="line">        log(.enroll, parameters: [</span><br><span class="line">            .classId: classId</span><br><span class="line">        ])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">extension</span> <span class="title">Bool</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">toString</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span> ? <span class="string">"yes"</span>: <span class="string">"no"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/395&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#395&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Prefer stat
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="iOS" scheme="https://onmyway133.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Back to static site</title>
    <link href="https://onmyway133.github.io/blog/Back-to-static-site/"/>
    <id>https://onmyway133.github.io/blog/Back-to-static-site/</id>
    <published>2019-09-03T18:11:53.000Z</published>
    <updated>2019-09-03T18:12:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/394" target="_blank" rel="noopener">#394</a></strong></p><p>It’s been a while since I wrote <a href="https://github.com/onmyway133/blog/issues/1" target="_blank" rel="noopener">Hello world, again</a>, the ease of GitHub issue indeed motivates me to write more.</p><p>In the mean time I also wrote on <a href="https://medium.com/@onmyway133" target="_blank" rel="noopener">https://medium.com/@onmyway133</a> and <a href="https://dev.to/onmyway133" target="_blank" rel="noopener">https://dev.to/onmyway133</a> and got some traction.</p><p>Then I started using GitHub pages again, with Jekyll and remote theme, it works great. But then I needed to manually link the GitHub issues to my page, that’s just labor work.</p><p>The best combo is to have a GitHub page backed by GitHub issue. After a bit comparison between different static site generators, I actually tried them all, I chose Hexo because I simply like Javascript</p><ul><li><a href="https://github.com/onmyway133/blog/issues/392" target="_blank" rel="noopener">How to use Hexo to deploy static site</a></li><li><a href="https://github.com/onmyway133/blog/issues/393" target="_blank" rel="noopener">How to get all GitHub issues using GraphQL</a></li></ul><p>I use the simple <a href="https://github.com/probberechts/hexo-theme-cactus" target="_blank" rel="noopener">cactus</a> theme for now with local searched power by <a href="https://www.npmjs.com/package/hexo-generator-search" target="_blank" rel="noopener">https://www.npmjs.com/package/hexo-generator-search</a>.</p><p>Then I wrote a node.js script to mirror my GitHub issue to my page, with correct tags and updated date.</p><p>If you by any chance visit my new page <a href="https://onmyway133.github.io/">https://onmyway133.github.io/</a>, ohayou from me 👋 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/394&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#394&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It’s been a
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>How to get all GitHub issues using GraphQL</title>
    <link href="https://onmyway133.github.io/blog/How-to-get-all-GitHub-issues-using-GraphQL/"/>
    <id>https://onmyway133.github.io/blog/How-to-get-all-GitHub-issues-using-GraphQL/</id>
    <published>2019-09-03T12:02:25.000Z</published>
    <updated>2019-09-03T17:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/393" target="_blank" rel="noopener">#393</a></strong></p><p><a href="https://developer.github.com/v4/explorer/" target="_blank" rel="noopener">https://developer.github.com/v4/explorer/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">query &#123; </span><br><span class="line">  repository(owner: &quot;onmyway133&quot;, name: &quot;blog&quot;) &#123; </span><br><span class="line">    issues(orderBy: &#123;field: UPDATED_AT, direction: ASC&#125;, last: 100) &#123;</span><br><span class="line">      edges &#123;</span><br><span class="line">        cursor</span><br><span class="line">        node &#123;</span><br><span class="line">          title</span><br><span class="line">          createdAt</span><br><span class="line">          updatedAt</span><br><span class="line">          labels(first: 10) &#123;</span><br><span class="line">            edges &#123;</span><br><span class="line">              node &#123;</span><br><span class="line">                name</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In node.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> GraphQL = <span class="built_in">require</span>(<span class="string">'graphql-request'</span>)</span><br><span class="line"><span class="keyword">const</span> GraphQLClient = GraphQL.GraphQLClient</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> GraphQLClient(<span class="string">'https://api.github.com/graphql'</span>, &#123;</span><br><span class="line">  headers: &#123;</span><br><span class="line">    Authorization: <span class="string">'Bearer 123456730712334152e6e1232c53987654312'</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> query = <span class="string">`&#123;</span></span><br><span class="line"><span class="string">  repository(owner: "onmyway133", name: "blog") &#123; </span></span><br><span class="line"><span class="string">    issues(first: 100) &#123;</span></span><br><span class="line"><span class="string">      edges &#123;</span></span><br><span class="line"><span class="string">        node &#123;</span></span><br><span class="line"><span class="string">          title</span></span><br><span class="line"><span class="string">          createdAt</span></span><br><span class="line"><span class="string">          updatedAt</span></span><br><span class="line"><span class="string">          labels(first: 10) &#123;</span></span><br><span class="line"><span class="string">            edges &#123;</span></span><br><span class="line"><span class="string">              node &#123;</span></span><br><span class="line"><span class="string">                name</span></span><br><span class="line"><span class="string">              &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">          &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;`</span></span><br><span class="line"> </span><br><span class="line">client.request(query)</span><br><span class="line">.then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">const</span> issues = data.repository.issues.edges.map(<span class="function">(<span class="params">edge</span>) =&gt;</span> &#123; <span class="keyword">return</span> edge.node &#125;)</span><br><span class="line"><span class="built_in">console</span>.log(issues)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/393&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#393&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
    
      <category term="javascript" scheme="https://onmyway133.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>How to use Hexo to deploy static site</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-Hexo-to-deploy-static-site/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-Hexo-to-deploy-static-site/</id>
    <published>2019-09-03T11:02:18.000Z</published>
    <updated>2019-09-03T11:08:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/392" target="_blank" rel="noopener">#392</a></strong></p><p>It’s been a long journey since <a href="https://github.com/onmyway133/blog/issues/1" target="_blank" rel="noopener">https://github.com/onmyway133/blog/issues/1</a>, next step is to keep GitHub issues as source, and mirror those to a static site.</p><p>Use 2 repos</p><ul><li><a href="https://github.com/onmyway133/web" target="_blank" rel="noopener">https://github.com/onmyway133/web</a> for source</li><li><a href="https://github.com/onmyway133/onmyway133.github.io" target="_blank" rel="noopener">https://github.com/onmyway133/onmyway133.github.io</a> for generated content</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm isntall -g hexo-cli</span><br><span class="line">echo $PATH=$PATH:/Users/khoa/.nodenv/versions/10.15.2/bin/hexo</span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>Update <code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/onmyway133/onmyway133.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html</a></li><li><a href="https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39" target="_blank" rel="noopener">https://gist.github.com/btfak/18938572f5df000ebe06fbd1872e4e39</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/392&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#392&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It’s been a
      
    
    </summary>
    
    
    
      <category term="javascript" scheme="https://onmyway133.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>How to use type coersion in Javascript</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-type-coersion-in-Javascript/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-type-coersion-in-Javascript/</id>
    <published>2019-09-03T09:59:28.000Z</published>
    <updated>2019-09-03T10:00:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/391" target="_blank" rel="noopener">#391</a></strong></p><p>People who make fun of Javascript probably don’t understand implicit type coersion and when to use triple equal. Javascript is very unexpected, but when we work with this language, we need to be aware.</p><blockquote><ol><li>Coercion–Automatically changing a value from one type to another.</li><li>If x is Number and y is String, return x == ToNumber(y)</li><li>If x is String or Number and y is Object, return x == ToPrimitive(y)</li><li>Empty array becomes empty string</li></ol></blockquote><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a" target="_blank" rel="noopener">https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a</a></li><li><a href="https://www.freecodecamp.org/news/js-type-coercion-explained-27ba3d9a2839/" target="_blank" rel="noopener">https://www.freecodecamp.org/news/js-type-coercion-explained-27ba3d9a2839/</a></li><li><a href="https://www.freecodecamp.org/news/explaining-the-best-javascript-meme-i-have-ever-seen/" target="_blank" rel="noopener">https://www.freecodecamp.org/news/explaining-the-best-javascript-meme-i-have-ever-seen/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/391&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#391&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;People who 
      
    
    </summary>
    
    
    
      <category term="javascript" scheme="https://onmyway133.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>How to safely access deeply nested object in Javascript</title>
    <link href="https://onmyway133.github.io/blog/How-to-safely-access-deeply-nested-object-in-Javascript/"/>
    <id>https://onmyway133.github.io/blog/How-to-safely-access-deeply-nested-object-in-Javascript/</id>
    <published>2019-09-03T09:53:16.000Z</published>
    <updated>2019-09-03T09:53:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/390" target="_blank" rel="noopener">#390</a></strong></p><p>An object ‘s property can be null or undefined.</p><p>Accessing step by step is tedious</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">props.user &amp;&amp;</span><br><span class="line">props.user.posts &amp;&amp;</span><br><span class="line">props.user.posts[<span class="number">0</span>] &amp;&amp;</span><br><span class="line">props.user.posts[<span class="number">0</span>].comments</span><br></pre></td></tr></table></figure><p>Dynamic parsing path is too clever and involves string in the end, which is a no no</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">get</span> = (p, o) =&gt;</span><br><span class="line">  p.reduce((xs, x) =&gt; (xs &amp;&amp; xs[x]) ? xs[x] : null, o)</span><br><span class="line"></span><br><span class="line">const getUserComments = <span class="keyword">get</span>(['user', 'posts', 0, 'comments'])</span><br></pre></td></tr></table></figure><p>Instead let’s use function and catch errors explicitly, and defaults with a fallback</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">get</span>: (f, defaultValue) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> value = f()</span><br><span class="line">      <span class="keyword">if</span> (isNotNullOrUndefined(value)) &#123;</span><br><span class="line">        <span class="keyword">return</span> value</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> defaultValue</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">     <span class="keyword">return</span> defaultValue</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> comments = <span class="keyword">get</span>(() =&gt; &#123; .user.posts[<span class="number">0</span>].comments &#125;, [])</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://medium.com/javascript-inside/safely-accessing-deeply-nested-values-in-javascript-99bf72a0855a" target="_blank" rel="noopener">https://medium.com/javascript-inside/safely-accessing-deeply-nested-values-in-javascript-99bf72a0855a</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/390&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#390&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An object ‘
      
    
    </summary>
    
    
    
      <category term="javascript" scheme="https://onmyway133.github.io/tags/javascript/"/>
    
  </entry>
  
</feed>
