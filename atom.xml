<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>onmyway133</title>
  
  <subtitle>What you don&#39;t know is what you haven&#39;t learned</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://onmyway133.github.io/"/>
  <updated>2020-01-17T05:22:36.000Z</updated>
  <id>https://onmyway133.github.io/</id>
  
  <author>
    <name>Khoa Pham</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How to handle radio group for NSButton</title>
    <link href="https://onmyway133.github.io/blog/How-to-handle-radio-group-for-NSButton/"/>
    <id>https://onmyway133.github.io/blog/How-to-handle-radio-group-for-NSButton/</id>
    <published>2020-01-17T05:22:36.000Z</published>
    <updated>2020-01-17T05:22:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/579" target="_blank" rel="noopener">#579</a></strong></p><p>Use same action, or we can roll our own implementation</p><blockquote><p>An NSButton configured as a radio button (with the -buttonType set to NSRadioButton), will now operate in a radio button group for applications linked on 10.8 and later. To have the button work in a radio group, use the same -action for each NSButton instance, and have the same superview for each button. When these conditions are met, checking one button (by changing the -state to 1), will uncheck all other buttons (by setting their -state to 0).</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Omnia</span><br><span class="line"></span><br><span class="line"><span class="meta">@IBAction</span> <span class="function"><span class="keyword">func</span> <span class="title">onModeButtonTouch</span><span class="params">(<span class="number">_</span> sender: NSRadioButton)</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> button <span class="keyword">in</span> [mode1Button, mode2Button] &#123;</span><br><span class="line">        button?.isOn = button === sender</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/579&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#579&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use same
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to specify locale in Swift</title>
    <link href="https://onmyway133.github.io/blog/How-to-specify-locale-in-Swift/"/>
    <id>https://onmyway133.github.io/blog/How-to-specify-locale-in-Swift/</id>
    <published>2020-01-14T13:03:41.000Z</published>
    <updated>2020-01-16T10:36:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/578" target="_blank" rel="noopener">#578</a></strong></p><p>Read <a href="https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPInternational/LanguageandLocaleIDs/LanguageandLocaleIDs.html" target="_blank" rel="noopener">Language and Locale IDs</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zh-Hans_HK</span><br><span class="line">[language designator]-[script designator]_[region designator]</span><br></pre></td></tr></table></figure><h2 id="Language-IDs"><a href="#Language-IDs" class="headerlink" title="Language IDs"></a>Language IDs</h2><blockquote><p>A language ID identifies a language used in many regions, a dialect used in a specific region, or a script used in multiple regions. To specify a language used in many regions, use a language designator by itself. To specify a specific dialect, use a hyphen to combine a language designator with a region designator. To specify a script, combine a language designator with a script designator. For example, to specify common English, use the en language designator as the language ID. To specify the English language as it is used in the United Kingdom, use en-GB as the language ID.</p></blockquote><h2 id="Locale-IDs"><a href="#Locale-IDs" class="headerlink" title="Locale IDs"></a>Locale IDs</h2><blockquote><p>A locale ID identifies a specific region and its cultural conventions—such as the formatting of dates, times, and numbers. To specify a locale, use an underscore character to combine a language ID with a region designator, as shown in Table B-5. For example, the locale ID for English-language speakers in the United Kingdom is en_GB, while the locale for English-speaking residents of the United States is en_US.</p></blockquote><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://nsdateformatter.com/" target="_blank" rel="noopener">https://nsdateformatter.com/</a></li><li><a href="https://albertodebortoli.com/2020/01/06/the-ios-internationalization-basics-i-keep-forgetting/" target="_blank" rel="noopener">https://albertodebortoli.com/2020/01/06/the-ios-internationalization-basics-i-keep-forgetting/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/578&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#578&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Read &lt;a
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>How to workaround URLSession issue in watchOS 6.1.1</title>
    <link href="https://onmyway133.github.io/blog/How-to-workaround-URLSession-issue-in-watchOS-6.1.1/"/>
    <id>https://onmyway133.github.io/blog/How-to-workaround-URLSession-issue-in-watchOS-6.1.1/</id>
    <published>2020-01-13T21:08:56.000Z</published>
    <updated>2020-01-13T21:13:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/577" target="_blank" rel="noopener">#577</a></strong></p><p><a href="https://stackoverflow.com/questions/59724731/class-avassetdownloadtask-is-implemented-in-both-cfnetwork-and-avfoundation" target="_blank" rel="noopener">https://stackoverflow.com/questions/59724731/class-avassetdownloadtask-is-implemented-in-both-cfnetwork-and-avfoundation</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">objc[45250]: Class AVAssetDownloadTask is implemented in both /Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/watchOS.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/CFNetwork.framework/CFNetwork (0x4ddd0ec) and /Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/watchOS.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/AVFoundation.framework/AVFoundation (0x16aea494). One of the two will be used. Which one is undefined.</span><br><span class="line"></span><br><span class="line">objc[45250]: Class AVAssetDownloadURLSession is implemented in both /Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/watchOS.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/CFNetwork.framework/CFNetwork (0x4dddd44) and /Applications/Xcode.app/Contents/Developer/Platforms/WatchOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/watchOS.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/AVFoundation.framework/AVFoundation (0x16aea4bc). One of the two will be used. Which one is undefined.</span><br></pre></td></tr></table></figure><p>Then URLSession stops working.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2020-01-13 22:50:12.430920+0100 MyAppWatch WatchKit Extension[45250:2099229] Task &lt;3CECDE81-59B9-4EDE-A4ED-1BA173646037&gt;.&lt;1&gt; finished with error [-999] Error Domain=NSURLErrorDomain Code=-999 &quot;cancelled&quot; UserInfo=&#123;NSErrorFailingURLKey=https://myapp.com/def.json, NSErrorFailingURLStringKey=https://myapp.com/def.json, NSLocalizedDescription=cancelled&#125;</span><br></pre></td></tr></table></figure><p>The workaround is to  remove Combine based API, and use completion block.</p><p>Instead of <code>dataTaskPublisher</code> which hangs indefinitely, no <code>sink</code> is reported</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">URLSession</span>.shared</span><br><span class="line">.dataTaskPublisher(<span class="keyword">for</span>: url)</span><br><span class="line">.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.data &#125;)</span><br><span class="line">.decode(type: <span class="type">T</span>.<span class="keyword">self</span>, decoder: <span class="type">JSONDecoder</span>())</span><br><span class="line">.eraseToAnyPublisher()</span><br><span class="line">.receive(on: <span class="type">RunLoop</span>.main)</span><br><span class="line">.sink(receiveCompletion: &#123; completionStatus <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> completionStatus &#123;</span><br><span class="line">    <span class="keyword">case</span> .finished:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> .failure(<span class="keyword">let</span> error):</span><br><span class="line">        completion(.failure(error))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, receiveValue: &#123; value <span class="keyword">in</span></span><br><span class="line">    completion(.success(value))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>just use normal</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> task = <span class="type">URLSession</span>.shared.dataTask(with: url, completionHandler: &#123; data, response, error <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> data = data, <span class="keyword">let</span> model = <span class="keyword">try</span>? <span class="type">JSONDecoder</span>().decode(<span class="type">T</span>.<span class="keyword">self</span>, from: data) &#123;</span><br><span class="line">        completion(.success(model))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        completion(.failure(error ?? <span class="type">ServiceError</span>.noInternet))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">task.resume()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/577&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#577&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="watchOS" scheme="https://onmyway133.github.io/tags/watchOS/"/>
    
  </entry>
  
  <entry>
    <title>How to generate XCTest test methods</title>
    <link href="https://onmyway133.github.io/blog/How-to-generate-XCTest-test-methods/"/>
    <id>https://onmyway133.github.io/blog/How-to-generate-XCTest-test-methods/</id>
    <published>2020-01-12T06:33:39.000Z</published>
    <updated>2020-01-12T06:33:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/576" target="_blank" rel="noopener">#576</a></strong></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>See <a href="https://github.com/onmyway133/Spek" target="_blank" rel="noopener">Spek</a></p><h3 id="Override-testInvocations-to-specify-test-methods"><a href="#Override-testInvocations-to-specify-test-methods" class="headerlink" title="Override testInvocations to specify test methods"></a>Override testInvocations to specify test methods</h3><p><a href="https://developer.apple.com/documentation/xctest/xctestcase/1496271-testinvocations" target="_blank" rel="noopener">https://developer.apple.com/documentation/xctest/xctestcase/1496271-testinvocations</a></p><blockquote><p>Returns an array of invocations representing each test method in the test case.</p></blockquote><p>Because <code>testInvocations</code> is unavailable in Swift, we need  to use ObjC</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"include/SpekHelperTestCase.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">SpekHelperTestCase</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)init &#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithInvocation: <span class="literal">nil</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSArray</span>&lt;<span class="built_in">NSInvocation</span> *&gt; *)testInvocations &#123;</span><br><span class="line">    <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *selectorStrings = [<span class="keyword">self</span> spekGenerateTestMethodNames];</span><br><span class="line">    <span class="built_in">NSMutableArray</span>&lt;<span class="built_in">NSInvocation</span> *&gt; *invocations = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:selectorStrings.count];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *selectorString <span class="keyword">in</span> selectorStrings) &#123;</span><br><span class="line">        SEL selector = <span class="built_in">NSSelectorFromString</span>(selectorString);</span><br><span class="line">        <span class="built_in">NSMethodSignature</span> *signature = [<span class="keyword">self</span> instanceMethodSignatureForSelector:selector];</span><br><span class="line">        <span class="built_in">NSInvocation</span> *invocation = [<span class="built_in">NSInvocation</span> invocationWithMethodSignature:signature];</span><br><span class="line">        invocation.selector = selector;</span><br><span class="line"></span><br><span class="line">        [invocations addObject:invocation];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> invocations;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span> *&gt; *)spekGenerateTestMethodNames &#123;</span><br><span class="line">    <span class="keyword">return</span> @[];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><h3 id="Generate-test-methods"><a href="#Generate-test-methods" class="headerlink" title="Generate test methods"></a>Generate test methods</h3><p>Calculate based on Describe and It, and use Objc runtime <code>class_addMethod</code> to add instance methods</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">SpekTestCase</span>: <span class="title">SpekHelperTestCase</span> </span>&#123;</span><br><span class="line">    <span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">makeDescribe</span>() -&gt; <span class="title">Describe</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Describe</span>(<span class="string">"empty"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #<span class="keyword">if</span> canImport(<span class="type">SpekHelper</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">spekGenerateTestMethodNames</span>() -&gt; [<span class="title">String</span>] </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> describe = <span class="type">Self</span>.makeDescribe()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> names: [<span class="type">String</span>] = []</span><br><span class="line">        generate(describe: describe, names: &amp;names)</span><br><span class="line">        <span class="keyword">return</span> names</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">func</span> <span class="title">addInstanceMethod</span><span class="params">(name: String, closure: @escaping <span class="params">()</span></span></span> -&gt; <span class="type">Void</span>) -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> block: <span class="meta">@convention</span>(block) (<span class="type">SpekTestCase</span>) -&gt; <span class="type">Void</span> = &#123; spekTestCase <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">let</span> <span class="number">_</span> = spekTestCase</span><br><span class="line">            closure()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> implementation = imp_implementationWithBlock(block <span class="keyword">as</span> <span class="type">Any</span>)</span><br><span class="line">        <span class="keyword">let</span> selector = <span class="type">NSSelectorFromString</span>(name)</span><br><span class="line">        class_addMethod(<span class="keyword">self</span>, selector, implementation, <span class="string">"v@:"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> name</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://github.com/Quick/Quick" target="_blank" rel="noopener">https://github.com/Quick/Quick</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/576&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#576&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="testing" scheme="https://onmyway133.github.io/tags/testing/"/>
    
  </entry>
  
  <entry>
    <title>How to use ObjC in Swift Package Manager</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-ObjC-in-Swift-Package-Manager/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-ObjC-in-Swift-Package-Manager/</id>
    <published>2020-01-11T20:35:09.000Z</published>
    <updated>2020-01-11T21:03:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/575" target="_blank" rel="noopener">#575</a></strong></p><h2 id="Create-Objc-target"><a href="#Create-Objc-target" class="headerlink" title="Create Objc target"></a>Create Objc target</h2><ul><li><a href="http://ankit.im/swift/2016/05/21/creating-objc-cpp-packages-with-swift-package-manager/" target="_blank" rel="noopener">http://ankit.im/swift/2016/05/21/creating-objc-cpp-packages-with-swift-package-manager/</a></li></ul><h2 id="Check-runtime"><a href="#Check-runtime" class="headerlink" title="Check runtime"></a>Check runtime</h2><p>Check  for example <code>_runtime(_ObjC)</code>  or <code>os(macOS</code> if you  plan  to use platform specific feature</p><ul><li><a href="https://github.com/Quick/Quick/blob/master/Package.swift" target="_blank" rel="noopener">https://github.com/Quick/Quick/blob/master/Package.swift</a></li><li><a href="https://github.com/Quick/Quick/pull/687/files" target="_blank" rel="noopener">https://github.com/Quick/Quick/pull/687/files</a></li></ul><p>For example, in test we use <code>XCTest</code> which is run via Xcode and is a macOS framework, so we need to check for <code>os(macOS)</code></p><p>Note that in Objc framework,  the header files must be in <code>include</code> folder</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">targets: &#123;</span><br><span class="line">        <span class="keyword">var</span> targets: [<span class="type">Target</span>] = [</span><br><span class="line">            .testTarget(</span><br><span class="line">                name: <span class="string">"QuickTests"</span>,</span><br><span class="line">                dependencies: [ <span class="string">"Quick"</span>, <span class="string">"Nimble"</span> ],</span><br><span class="line">                exclude: [</span><br><span class="line">                    <span class="string">"QuickAfterSuiteTests/AfterSuiteTests+ObjC.m"</span>,</span><br><span class="line">                    <span class="string">"QuickFocusedTests/FocusedTests+ObjC.m"</span>,</span><br><span class="line">                    <span class="string">"QuickTests/FunctionalTests/ObjC"</span>,</span><br><span class="line">                    <span class="string">"QuickTests/Helpers/QCKSpecRunner.h"</span>,</span><br><span class="line">                    <span class="string">"QuickTests/Helpers/QCKSpecRunner.m"</span>,</span><br><span class="line">                    <span class="string">"QuickTests/Helpers/QuickTestsBridgingHeader.h"</span>,</span><br><span class="line">                    <span class="string">"QuickTests/QuickConfigurationTests.m"</span>,</span><br><span class="line">                ]</span><br><span class="line">            ),</span><br><span class="line">        ]</span><br><span class="line">#<span class="keyword">if</span> os(macOS)</span><br><span class="line">        targets.append(contentsOf: [</span><br><span class="line">            .target(name: <span class="string">"QuickSpecBase"</span>, dependencies: []),</span><br><span class="line">            .target(name: <span class="string">"Quick"</span>, dependencies: [ <span class="string">"QuickSpecBase"</span> ]),</span><br><span class="line">        ])</span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">        targets.append(contentsOf: [</span><br><span class="line">            .target(name: <span class="string">"Quick"</span>, dependencies: []),</span><br><span class="line">        ])</span><br><span class="line">#endif</span><br><span class="line">        <span class="keyword">return</span> targets</span><br><span class="line">    &#125;(),</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/575&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#575&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="spm" scheme="https://onmyway133.github.io/tags/spm/"/>
    
  </entry>
  
  <entry>
    <title>How to expression cast type in lldb in Swit</title>
    <link href="https://onmyway133.github.io/blog/How-to-expression-cast-type-in-lldb-in-Swit/"/>
    <id>https://onmyway133.github.io/blog/How-to-expression-cast-type-in-lldb-in-Swit/</id>
    <published>2020-01-10T07:35:12.000Z</published>
    <updated>2020-01-10T07:35:12.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/574" target="_blank" rel="noopener">#574</a></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">expr -l Swift -- import UIKit</span><br><span class="line">expr -l Swift -- let $collectionView = unsafeBitCast(0x7fddd8180000, to: UICollectionView.self)</span><br><span class="line">expr -l Swift -- $collectionView.safeAreaInsets</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/574&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#574&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>How to use Applications folder in macOS</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-Applications-folder-in-macOS/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-Applications-folder-in-macOS/</id>
    <published>2020-01-08T21:34:46.000Z</published>
    <updated>2020-01-08T21:34:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/573" target="_blank" rel="noopener">#573</a></strong></p><p>There are 2 Applications folder</p><ul><li>/System/Applications: contains Notes, Books, Calculator, …</li><li>/Applications: contains Safari, Xcode, Keynote, …</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/573&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#573&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are
        
      
    
    </summary>
    
    
    
      <category term="macOS" scheme="https://onmyway133.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>How to fix library not found with SPM and CocoaPods in  Xcode</title>
    <link href="https://onmyway133.github.io/blog/How-to-fix-library-not-found-with-SPM-and-CocoaPods-in-Xcode/"/>
    <id>https://onmyway133.github.io/blog/How-to-fix-library-not-found-with-SPM-and-CocoaPods-in-Xcode/</id>
    <published>2020-01-08T20:49:17.000Z</published>
    <updated>2020-01-08T20:49:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/572" target="_blank" rel="noopener">#572</a></strong></p><p>After migrating a few pods to use SPM, some libraries fail to load. This is because the workspace now uses both SPM and cocoapods</p><blockquote><p>code signature in … not valid for use in process using Library Validation: mapped file has no Team ID and is not a platform binary (signed with custom identity or adhoc?)</p></blockquote><p>The workaround is to disable Library validation</p><img width="888" alt="Screenshot 2020-01-08 at 22 48 28" src="https://user-images.githubusercontent.com/2284279/72018966-fe244980-3268-11ea-8d60-5c3e49d39299.png">]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/572&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#572&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;After
        
      
    
    </summary>
    
    
    
      <category term="xcode" scheme="https://onmyway133.github.io/tags/xcode/"/>
    
      <category term="spm" scheme="https://onmyway133.github.io/tags/spm/"/>
    
  </entry>
  
  <entry>
    <title>How to make rotation in same direction in iOS</title>
    <link href="https://onmyway133.github.io/blog/How-to-make-rotation-in-same-direction-in-iOS/"/>
    <id>https://onmyway133.github.io/blog/How-to-make-rotation-in-same-direction-in-iOS/</id>
    <published>2020-01-06T14:12:19.000Z</published>
    <updated>2020-01-06T14:12:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/571" target="_blank" rel="noopener">#571</a></strong></p><p>From <code>CGFloat.pi / 2</code> to <code>-CGFloat.pi / 2 + epsilon</code></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/571&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#571&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;From
        
      
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://onmyway133.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>How to get updated safeAreaInsets in iOS</title>
    <link href="https://onmyway133.github.io/blog/How-to-get-updated-safeAreaInsets-in-iOS/"/>
    <id>https://onmyway133.github.io/blog/How-to-get-updated-safeAreaInsets-in-iOS/</id>
    <published>2020-01-06T12:30:09.000Z</published>
    <updated>2020-01-07T14:14:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/570" target="_blank" rel="noopener">#570</a></strong></p><h1 id="Use-viewSafeArea"><a href="#Use-viewSafeArea" class="headerlink" title="Use viewSafeArea"></a>Use viewSafeArea</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@available</span>(iOS <span class="number">11.0</span>, *)</span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewSafeAreaInsetsDidChange</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewSafeAreaInsetsDidChange()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">self</span>.collectionView.reloadData()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Use <a href="https://developer.apple.com/documentation/uikit/uiview/2891102-safearealayoutguide" target="_blank" rel="noopener">https://developer.apple.com/documentation/uikit/uiview/2891102-safearealayoutguide</a></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">view.safeAreaLayoutGuide.layoutFrame</span><br></pre></td></tr></table></figure><p><a href="https://developer.apple.com/documentation/uikit/uiview/2891103-safeareainsets" target="_blank" rel="noopener">https://developer.apple.com/documentation/uikit/uiview/2891103-safeareainsets</a></p><blockquote><p>For the view controller’s root view, the insets account for the status bar, other visible bars, and any additional insets that you specified using the additionalSafeAreaInsets property of your view controller. For other views in the view hierarchy, the insets reflect only the portion of the view that is covered. For example, if a view is entirely within the safe area of its superview, the edge insets in this property are 0.</p></blockquote><p>Use UICollectionView.contentInsetAdjustmentBehavior</p><h2 id="Nested-view"><a href="#Nested-view" class="headerlink" title="Nested view"></a>Nested view</h2><p>For UICollectionView inside Cell inside UICollectionView, its insets is 0, but its parent parent is correct, which is the original cell</p><p>UICollectionView -&gt; Cell -&gt; ContentView -&gt; UICollectionView</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">collectionView.superview?.superview?.safeAreaInsets</span><br></pre></td></tr></table></figure><p>viewWillAppear: safeAreaInsets is not set to collectionView<br>viewDidAppear: safeAreaInsets is set to collectionView and cells, but not to nested collectionView</p><p>In <code>viewSafeAreaInsetsDidChange</code>, invalidate outer and nested <code>collectionViewLayout</code></p><h2 id="Use-extendedLayoutIncludesOpaqueBars"><a href="#Use-extendedLayoutIncludesOpaqueBars" class="headerlink" title="Use extendedLayoutIncludesOpaqueBars"></a>Use extendedLayoutIncludesOpaqueBars</h2><p><a href="https://developer.apple.com/documentation/uikit/uiviewcontroller/1621404-extendedlayoutincludesopaquebars" target="_blank" rel="noopener">https://developer.apple.com/documentation/uikit/uiviewcontroller/1621404-extendedlayoutincludesopaquebars</a></p><blockquote><p>A Boolean value indicating whether or not the extended layout includes opaque bars.</p></blockquote><p>Seems to affect left and right insets</p><ul><li><a href="https://stackoverflow.com/questions/18798792/explaining-difference-between-automaticallyadjustsscrollviewinsets-extendedlayo" target="_blank" rel="noopener">https://stackoverflow.com/questions/18798792/explaining-difference-between-automaticallyadjustsscrollviewinsets-extendedlayo</a></li><li><a href="https://medium.com/@wailord/extended-layout-in-ios-pre-ios-11-5eff2debf28" target="_blank" rel="noopener">https://medium.com/@wailord/extended-layout-in-ios-pre-ios-11-5eff2debf28</a></li></ul><h2 id="Seemingly-related-to-UIPresentationController"><a href="#Seemingly-related-to-UIPresentationController" class="headerlink" title="Seemingly related to UIPresentationController"></a>Seemingly related to UIPresentationController</h2><p>But it’s not, it is because of when safeAreaInsets is available, and how it is passed to nested view</p><p>When invalidating collection view layout with custom <code>UIPresentationController</code>, <code>alongsideTransition</code> is called twice, the first time with old <code>safeAreaInsets</code>, and the second time with latest <code>safeAreaInsets</code></p><p>And the layout invalidation uses the old insets.</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillTransition</span><span class="params">(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewWillTransition(to: size, with: coordinator)</span><br><span class="line">    coordinator.animate(alongsideTransition: &#123; <span class="number">_</span> <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">self</span>.collectionViewLayout.invalidateLayout()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dispatch</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UIViewController subclass</span></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewWillTransition</span><span class="params">(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewWillTransition(to: size, with: coordinator)</span><br><span class="line">    coordinator.animate(alongsideTransition: &#123; <span class="number">_</span> <span class="keyword">in</span></span><br><span class="line">        <span class="type">DispatchQueue</span>.main.async &#123;</span><br><span class="line">            <span class="keyword">self</span>.collectionViewLayout.invalidateLayout()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Call layoutIfNeeded</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UIPresentationController subclass</span></span><br><span class="line"><span class="keyword">override</span> <span class="keyword">var</span> frameOfPresentedViewInContainerView: <span class="type">CGRect</span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> containerView = containerView <span class="keyword">else</span> &#123; <span class="keyword">return</span> .zero &#125;</span><br><span class="line">    </span><br><span class="line">    presentedView?.setNeedsLayout()</span><br><span class="line">    presentedView?.layoutIfNeeded()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ...</span><br></pre></td></tr></table></figure><h2 id="Check"><a href="#Check" class="headerlink" title="Check"></a>Check</h2><p>Check that UICollectionView or the view you’re working on is in view hierarchy</p><ul><li><a href="https://stackoverflow.com/questions/46271186/safe-area-not-work-properly-on-iphone-x-when-subviews-are-not-in-the-view-area" target="_blank" rel="noopener">https://stackoverflow.com/questions/46271186/safe-area-not-work-properly-on-iphone-x-when-subviews-are-not-in-the-view-area</a></li></ul><p>Check that you’re using code in viewDidLayoutSubviews when safeAreaInsets is known</p><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://www.appcoda.com/presentation-controllers-tutorial/" target="_blank" rel="noopener">https://www.appcoda.com/presentation-controllers-tutorial/</a></li><li><a href="https://fluffy.es/4-ios13-breaking-changes/" target="_blank" rel="noopener">https://fluffy.es/4-ios13-breaking-changes/</a></li><li><a href="https://developer.apple.com/documentation/uikit/uiview/positioning_content_relative_to_the_safe_area" target="_blank" rel="noopener">https://developer.apple.com/documentation/uikit/uiview/positioning_content_relative_to_the_safe_area</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/570&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#570&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1
        
      
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://onmyway133.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>How to disable implicit decoration view animation in UICollectionView</title>
    <link href="https://onmyway133.github.io/blog/How-to-disable-implicit-decoration-view-animation-in-UICollectionView/"/>
    <id>https://onmyway133.github.io/blog/How-to-disable-implicit-decoration-view-animation-in-UICollectionView/</id>
    <published>2020-01-06T12:01:57.000Z</published>
    <updated>2020-01-07T14:48:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/569" target="_blank" rel="noopener">#569</a></strong></p><p>From documentation <a href="https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617726-initiallayoutattributesforappear" target="_blank" rel="noopener">https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617726-initiallayoutattributesforappear</a></p><blockquote><p>This method is called after the prepare(forCollectionViewUpdates:) method and before the finalizeCollectionViewUpdates() method for any decoration views that are about to be inserted. Your implementation should return the layout information that describes the initial position and state of the view. The collection view uses this information as the starting point for any animations. (The end point of the animation is the view’s new location in the collection view.) If you return nil, the layout object uses the item’s final attributes for both the start and end points of the animation.</p></blockquote><blockquote><p>The default implementation of this method returns nil.</p></blockquote><p>Although the doc says “The default implementation of this method returns nil”, calling <code>super.initialLayoutAttributesForAppearingDecorationElement</code> gives somehow implicit animation. The workaround is to explicitly return nil</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">initialLayoutAttributesForAppearingDecorationElement</span><span class="params">(ofKind elementKind: String, at decorationIndexPath: IndexPath)</span></span> -&gt; <span class="type">UICollectionViewLayoutAttributes?</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">finalLayoutAttributesForDisappearingDecorationElement</span><span class="params">(ofKind elementKind: String, at decorationIndexPath: IndexPath)</span></span> -&gt; <span class="type">UICollectionViewLayoutAttributes?</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Decoration seems to be removed when all items are removed. Workaround is to check and only add decoration when there is preferred data or cell</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/569&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#569&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;From
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="iOS" scheme="https://onmyway133.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>How to make simple tracker via swizzling in Swift</title>
    <link href="https://onmyway133.github.io/blog/How-to-make-simple-tracker-via-swizzling-in-Swift/"/>
    <id>https://onmyway133.github.io/blog/How-to-make-simple-tracker-via-swizzling-in-Swift/</id>
    <published>2020-01-04T06:57:49.000Z</published>
    <updated>2020-01-04T06:57:49.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/568" target="_blank" rel="noopener">#568</a></strong></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ul><li><a href="https://github.com/onmyway133/EasyTracker" target="_blank" rel="noopener">EasyTracker</a></li></ul><h2 id="Swizzle-viewDidAppear"><a href="#Swizzle-viewDidAppear" class="headerlink" title="Swizzle viewDidAppear"></a>Swizzle viewDidAppear</h2><ul><li><a href="https://github.com/onmyway133/EasyTracker/blob/master/Sources/Trackers.swift" target="_blank" rel="noopener">https://github.com/onmyway133/EasyTracker/blob/master/Sources/Trackers.swift</a></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> mapping: [<span class="type">String</span>: (<span class="type">UIViewController</span>) -&gt; <span class="type">Void</span>] = [:]</span><br><span class="line"><span class="keyword">var</span> hasSwizzled = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">track</span>&lt;T: UIViewController&gt;<span class="params">(<span class="number">_</span> type: T.<span class="keyword">Type</span>, block: @escaping <span class="params">(T)</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> original = #selector(<span class="type">UIViewController</span>.viewDidAppear(<span class="number">_</span>:))</span><br><span class="line">  <span class="keyword">let</span> swizled = #selector(<span class="type">UIViewController</span>.trackers_viewDidAppear(<span class="number">_</span>:))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> !hasSwizzled &#123;</span><br><span class="line">    swizzle(kClass: <span class="type">UIViewController</span>.<span class="keyword">self</span>, originalSelector: original, swizzledSelector: swizled)</span><br><span class="line">    hasSwizzled = <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  mapping[<span class="type">NSStringFromClass</span>(type)] = &#123; controller <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> controller = controller <span class="keyword">as</span>? <span class="type">T</span> &#123;</span><br><span class="line">      block(controller)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">trackers_viewDidAppear</span><span class="params">(<span class="number">_</span> animated: Bool)</span></span> &#123;</span><br><span class="line">    trackers_viewDidAppear(animated)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> string = <span class="type">NSStringFromClass</span>(type(of: <span class="keyword">self</span>))</span><br><span class="line">    mapping[string]?(<span class="keyword">self</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">swizzle</span><span class="params">(kClass: AnyClass, originalSelector: Selector, swizzledSelector: Selector)</span></span> &#123;</span><br><span class="line">  <span class="keyword">let</span> originalMethod = class_getInstanceMethod(kClass, originalSelector)</span><br><span class="line">  <span class="keyword">let</span> swizzledMethod = class_getInstanceMethod(kClass, swizzledSelector)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> didAddMethod = class_addMethod(kClass, originalSelector, method_getImplementation(swizzledMethod), method_getTypeEncoding(swizzledMethod))</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> didAddMethod &#123;</span><br><span class="line">    class_replaceMethod(kClass, swizzledSelector, method_getImplementation(originalMethod), method_getTypeEncoding(originalMethod))</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    method_exchangeImplementations(originalMethod, swizzledMethod)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Track-in-a-declarative-way"><a href="#Track-in-a-declarative-way" class="headerlink" title="Track in a declarative way"></a>Track in a declarative way</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">track(<span class="type">ListController</span>.<span class="keyword">self</span>) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"list controller has appeared"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">track(<span class="type">DetailController</span>.<span class="keyword">self</span>) &#123;</span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"detail controller has appeared"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">track(<span class="type">CouponController</span>.<span class="keyword">self</span>) &#123; controller <span class="keyword">in</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">"coupon controller has appeared with code \(controller.coupon.code)"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/568&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#568&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>How to make simple adapter for delegate and datasource for UICollectionView and UITableView</title>
    <link href="https://onmyway133.github.io/blog/How-to-make-simple-adapter-for-delegate-and-datasource-for-UICollectionView-and-UITableView/"/>
    <id>https://onmyway133.github.io/blog/How-to-make-simple-adapter-for-delegate-and-datasource-for-UICollectionView-and-UITableView/</id>
    <published>2020-01-04T06:46:50.000Z</published>
    <updated>2020-01-04T06:46:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/567" target="_blank" rel="noopener">#567</a></strong></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ul><li><a href="https://github.com/onmyway133/Upstream/" target="_blank" rel="noopener">Upstream</a></li></ul><h2 id="Make-open-Adapter"><a href="#Make-open-Adapter" class="headerlink" title="Make open Adapter"></a>Make open Adapter</h2><ul><li><a href="https://github.com/onmyway133/Upstream" target="_blank" rel="noopener">https://github.com/onmyway133/Upstream</a></li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">protocol</span> <span class="title">AdapterDelegate</span>: <span class="title">class</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/// Apply model to view</span></span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">configure</span><span class="params">(model: <span class="keyword">Any</span>, view: UIView, indexPath: IndexPath)</span></span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/// Handle view selection</span></span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">select</span><span class="params">(model: <span class="keyword">Any</span>)</span></span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/// Size the view</span></span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">size</span><span class="params">(model: <span class="keyword">Any</span>, containerSize: CGSize)</span></span> -&gt; <span class="type">CGSize</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// Act as DataSource and Delegate for UICollectionView, UITableView</span></span><br><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Adapter</span>: <span class="title">NSObject</span>,</span></span><br><span class="line"><span class="class">  <span class="title">UICollectionViewDataSource</span>, <span class="title">UICollectionViewDelegateFlowLayout</span>,</span></span><br><span class="line"><span class="class"><span class="title">UITableViewDataSource</span>, <span class="title">UITableViewDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">var</span> sections: [<span class="type">Section</span>] = []</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">weak</span> <span class="keyword">var</span> collectionView: <span class="type">UICollectionView?</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">weak</span> <span class="keyword">var</span> tableView: <span class="type">UITableView?</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">weak</span> <span class="keyword">var</span> delegate: <span class="type">AdapterDelegate?</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> registryService = <span class="type">RegistryService</span>()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// MARK: - Initialiser</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">required</span> <span class="keyword">init</span>(collectionView: <span class="type">UICollectionView</span>) &#123;</span><br><span class="line">    <span class="keyword">self</span>.collectionView = collectionView</span><br><span class="line">    <span class="keyword">super</span>.<span class="keyword">init</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">required</span> <span class="keyword">init</span>(tableView: <span class="type">UITableView</span>) &#123;</span><br><span class="line">    <span class="keyword">self</span>.tableView = tableView</span><br><span class="line">    <span class="keyword">super</span>.<span class="keyword">init</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// MARK: - UICollectionViewDataSource</span></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">numberOfSections</span><span class="params">(<span class="keyword">in</span> collectionView: UICollectionView)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sections.<span class="built_in">count</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(<span class="number">_</span> collectionView: UICollectionView,</span></span></span><br><span class="line"><span class="function"><span class="params">                           numberOfItemsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sections[section].items.<span class="built_in">count</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(<span class="number">_</span> collectionView: UICollectionView,</span></span></span><br><span class="line"><span class="function"><span class="params">                           cellForItemAt indexPath: IndexPath)</span></span> -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> item = sections[indexPath.section].items[indexPath.row]</span><br><span class="line">    <span class="keyword">let</span> cell = collectionView.dequeueReusableCell(</span><br><span class="line">      withReuseIdentifier: item.cellType.typeName,</span><br><span class="line">      <span class="keyword">for</span>: indexPath)</span><br><span class="line"></span><br><span class="line">    delegate?.configure(model: item.model, view: cell, indexPath: indexPath)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cell</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="number">_</span> collectionView: UICollectionView,</span></span></span><br><span class="line"><span class="function"><span class="params">    viewForSupplementaryElementOfKind kind: String,</span></span></span><br><span class="line"><span class="function"><span class="params">    at indexPath: IndexPath)</span></span> -&gt; <span class="type">UICollectionReusableView</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> header = sections[indexPath.section].header,</span><br><span class="line">      kind == <span class="type">UICollectionElementKindSectionHeader</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> view = collectionView.dequeueReusableSupplementaryView(</span><br><span class="line">        ofKind: <span class="type">UICollectionElementKindSectionHeader</span>,</span><br><span class="line">        withReuseIdentifier: header.viewType.typeName,</span><br><span class="line">        <span class="keyword">for</span>: indexPath</span><br><span class="line">      )</span><br><span class="line"></span><br><span class="line">      delegate?.configure(model: header.model, view: view, indexPath: indexPath)</span><br><span class="line">      <span class="keyword">return</span> view</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> footer = sections[indexPath.section].footer,</span><br><span class="line">      kind == <span class="type">UICollectionElementKindSectionFooter</span> &#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">let</span> view = collectionView.dequeueReusableSupplementaryView(</span><br><span class="line">        ofKind: <span class="type">UICollectionElementKindSectionFooter</span>,</span><br><span class="line">        withReuseIdentifier: footer.viewType.typeName,</span><br><span class="line">        <span class="keyword">for</span>: indexPath</span><br><span class="line">      )</span><br><span class="line"></span><br><span class="line">      delegate?.configure(model: footer.model, view: view, indexPath: indexPath)</span><br><span class="line">      <span class="keyword">return</span> view</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> view = <span class="type">DummyReusableView</span>()</span><br><span class="line">      view.isHidden = <span class="literal">true</span></span><br><span class="line">      <span class="keyword">return</span> view</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// MARK: - UICollectionViewDelegate</span></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="number">_</span> collectionView: UICollectionView,</span></span></span><br><span class="line"><span class="function"><span class="params">    didSelectItemAt indexPath: IndexPath)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> item = sections[indexPath.section].items[indexPath.row]</span><br><span class="line">    delegate?.select(model: item.model)</span><br><span class="line">    collectionView.deselectItem(at: indexPath, animated: <span class="literal">true</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="number">_</span> collectionView: UICollectionView,</span></span></span><br><span class="line"><span class="function"><span class="params">    layout collectionViewLayout: UICollectionViewLayout,</span></span></span><br><span class="line"><span class="function"><span class="params">    sizeForItemAt indexPath: IndexPath)</span></span> -&gt; <span class="type">CGSize</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> item = sections[indexPath.section].items[indexPath.row]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> size = delegate?.size(model: item.model, containerSize: collectionView.frame.size) &#123;</span><br><span class="line">      <span class="keyword">return</span> size</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> size = (collectionViewLayout <span class="keyword">as</span>? <span class="type">UICollectionViewFlowLayout</span>)?.itemSize &#123;</span><br><span class="line">      <span class="keyword">return</span> size</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> collectionView.frame.size</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="number">_</span> collectionView: UICollectionView,</span></span></span><br><span class="line"><span class="function"><span class="params">    layout collectionViewLayout: UICollectionViewLayout,</span></span></span><br><span class="line"><span class="function"><span class="params">    referenceSizeForHeaderInSection section: Int)</span></span> -&gt; <span class="type">CGSize</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> header = sections[section].header <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> .zero</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> size = delegate?.size(model: header.model, containerSize: collectionView.frame.size) <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> .zero</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> size</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="number">_</span> collectionView: UICollectionView,</span></span></span><br><span class="line"><span class="function"><span class="params">    layout collectionViewLayout: UICollectionViewLayout,</span></span></span><br><span class="line"><span class="function"><span class="params">    referenceSizeForFooterInSection section: Int)</span></span> -&gt; <span class="type">CGSize</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> footer = sections[section].footer <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> .zero</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> size = delegate?.size(model: footer.model, containerSize: collectionView.frame.size) <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> .zero</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> size</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// MARK: - Reload</span></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">reload</span><span class="params">(sections: [Section])</span></span> &#123;</span><br><span class="line">    <span class="comment">// Registry</span></span><br><span class="line">    registryService.registerIfNeeded(</span><br><span class="line">      collectionView: collectionView,</span><br><span class="line">      tableView: tableView,</span><br><span class="line">      sections: sections</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">self</span>.sections = sections</span><br><span class="line">    collectionView?.reloadData()</span><br><span class="line">    tableView?.reloadData()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// MARK: - UITableViewDataSource</span></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">numberOfSections</span><span class="params">(<span class="keyword">in</span> tableView: UITableView)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sections.<span class="built_in">count</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sections[section].items.<span class="built_in">count</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, cellForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> item = sections[indexPath.section].items[indexPath.row]</span><br><span class="line">    <span class="keyword">let</span> cell = tableView.dequeueReusableCell(</span><br><span class="line">      withIdentifier: item.cellType.typeName,</span><br><span class="line">      <span class="keyword">for</span>: indexPath</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    delegate?.configure(model: item.model, view: cell, indexPath: indexPath)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cell</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// MARK: - UITableViewDelegate</span></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, didSelectRowAt indexPath: IndexPath)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> item = sections[indexPath.section].items[indexPath.row]</span><br><span class="line">    delegate?.select(model: item.model)</span><br><span class="line">    tableView.deselectRow(at: indexPath, animated: <span class="literal">true</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, heightForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> item = sections[indexPath.section].items[indexPath.row]</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> size = delegate?.size(model: item.model, containerSize: tableView.frame.size) &#123;</span><br><span class="line">      <span class="keyword">return</span> size.height</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, heightForHeaderInSection section: Int)</span></span> -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> header = sections[section].header <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> size = delegate?.size(model: header.model, containerSize: tableView.frame.size) <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> size.height</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, heightForFooterInSection section: Int)</span></span> -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> footer = sections[section].footer <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> size = delegate?.size(model: footer.model, containerSize: tableView.frame.size) <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> size.height</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, viewForHeaderInSection section: Int)</span></span> -&gt; <span class="type">UIView?</span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> header = sections[section].header <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> view = tableView.dequeueReusableHeaderFooterView(withIdentifier: header.viewType.typeName) <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    delegate?.configure(model: header.model, view: view, indexPath: <span class="type">IndexPath</span>(row: <span class="number">0</span>, section: section))</span><br><span class="line">    <span class="keyword">return</span> view</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, viewForFooterInSection section: Int)</span></span> -&gt; <span class="type">UIView?</span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> footer = sections[section].footer <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> view = tableView.dequeueReusableHeaderFooterView(withIdentifier: footer.viewType.typeName) <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    delegate?.configure(model: footer.model, view: view, indexPath: <span class="type">IndexPath</span>(row: <span class="number">0</span>, section: section))</span><br><span class="line">    <span class="keyword">return</span> view</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Declare-data"><a href="#Declare-data" class="headerlink" title="Declare data"></a>Declare data</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> sections: [<span class="type">Section</span>] = [</span><br><span class="line">  <span class="type">Section</span>(</span><br><span class="line">    header: <span class="type">Header</span>(model: <span class="type">Model</span>.header(<span class="string">"Information"</span>), viewType: <span class="type">HeaderView</span>.<span class="keyword">self</span>),</span><br><span class="line">    items: [</span><br><span class="line">      <span class="type">Item</span>(model: <span class="type">Model</span>.avatar(avatarUrl), cellType: <span class="type">AvatarCell</span>.<span class="keyword">self</span>),</span><br><span class="line">      <span class="type">Item</span>(model: <span class="type">Model</span>.name(<span class="string">"Thor"</span>), cellType: <span class="type">NameCell</span>.<span class="keyword">self</span>),</span><br><span class="line">      <span class="type">Item</span>(model: <span class="type">Model</span>.location(<span class="string">"Asgard"</span>), cellType: <span class="type">NameCell</span>.<span class="keyword">self</span>)</span><br><span class="line">    ]</span><br><span class="line">  ),</span><br><span class="line">  <span class="type">Section</span>(</span><br><span class="line">    header: <span class="type">Header</span>(model: <span class="type">Model</span>.header(<span class="string">"Skills"</span>), viewType: <span class="type">HeaderView</span>.<span class="keyword">self</span>),</span><br><span class="line">    items: [</span><br><span class="line">      <span class="type">Item</span>(model: <span class="type">Model</span>.skill(<span class="string">"iOS"</span>), cellType: <span class="type">SkillCell</span>.<span class="keyword">self</span>),</span><br><span class="line">      <span class="type">Item</span>(model: <span class="type">Model</span>.skill(<span class="string">"Android"</span>), cellType: <span class="type">SkillCell</span>.<span class="keyword">self</span>)</span><br><span class="line">    ]</span><br><span class="line">  )</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">adapter.reload(sections: sections)</span><br></pre></td></tr></table></figure><h2 id="Configure-required-blocks"><a href="#Configure-required-blocks" class="headerlink" title="Configure required blocks"></a>Configure required blocks</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">ProfileViewController</span>: <span class="title">AdapterDelegate</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">configure</span><span class="params">(model: <span class="keyword">Any</span>, view: UIView, indexPath: IndexPath)</span></span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> model = model <span class="keyword">as</span>? <span class="type">Model</span> <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (model, view) &#123;</span><br><span class="line">    <span class="keyword">case</span> (.avatar(<span class="keyword">let</span> string), <span class="keyword">let</span> cell <span class="keyword">as</span> <span class="type">Avatarcell</span>):</span><br><span class="line">      cell.configure(string: string)</span><br><span class="line">    <span class="keyword">case</span> (.name(<span class="keyword">let</span> name), <span class="keyword">let</span> cell <span class="keyword">as</span> <span class="type">NameCell</span>):</span><br><span class="line">      cell.configure(string: name)</span><br><span class="line">    <span class="keyword">case</span> (.header(<span class="keyword">let</span> string), <span class="keyword">let</span> view <span class="keyword">as</span> <span class="type">HeaderView</span>):</span><br><span class="line">      view.configure(string: string)</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">select</span><span class="params">(model: <span class="keyword">Any</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> model = model <span class="keyword">as</span>? <span class="type">Model</span> <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> model &#123;</span><br><span class="line">    <span class="keyword">case</span> .skill(<span class="keyword">let</span> skill):</span><br><span class="line">      <span class="keyword">let</span> skillController = <span class="type">SkillController</span>(skill: skill)</span><br><span class="line">      navigationController?.pushViewController(skillController, animated: <span class="literal">true</span>)</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">size</span><span class="params">(model: <span class="keyword">Any</span>, containerSize: CGSize)</span></span> -&gt; <span class="type">CGSize</span> &#123;</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> model = model <span class="keyword">as</span>? <span class="type">Model</span> <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> .zero</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> model &#123;</span><br><span class="line">    <span class="keyword">case</span> .name:</span><br><span class="line">      <span class="keyword">return</span> <span class="type">CGSize</span>(width: containerSize.width, height: <span class="number">40</span>)</span><br><span class="line">    <span class="keyword">case</span> .avatar:</span><br><span class="line">      <span class="keyword">return</span> <span class="type">CGSize</span>(width: containerSize.width, height: <span class="number">200</span>)</span><br><span class="line">    <span class="keyword">case</span> .header:</span><br><span class="line">      <span class="keyword">return</span> <span class="type">CGSize</span>(width: containerSize.width, height: <span class="number">30</span>)</span><br><span class="line">     <span class="keyword">default</span>:</span><br><span class="line">       <span class="keyword">return</span> .zero</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Extending-Manager"><a href="#Extending-Manager" class="headerlink" title="Extending Manager"></a>Extending Manager</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccordionManager</span>&lt;<span class="title">T</span>&gt;: <span class="title">Manager</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">var</span> collapsedSections = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> collapsedSections.<span class="built_in">contains</span>(section)</span><br><span class="line">      ? <span class="number">0</span> : sections[section].items.<span class="built_in">count</span></span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">func</span> <span class="title">toggle</span><span class="params">(section: Int)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> collapsedSections.<span class="built_in">contains</span>(section) &#123;</span><br><span class="line">      collapsedSections.remove(section)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      collapsedSections.insert(section)</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">let</span> indexSet = <span class="type">IndexSet</span>(integer: section)</span><br><span class="line">    tableView?.reloadSections(indexSet, with: .automatic)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/567&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#567&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
      <category term="iOS" scheme="https://onmyway133.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>How to make progress HUD in Swift</title>
    <link href="https://onmyway133.github.io/blog/How-to-make-progress-HUD-in-Swift/"/>
    <id>https://onmyway133.github.io/blog/How-to-make-progress-HUD-in-Swift/</id>
    <published>2020-01-04T06:37:56.000Z</published>
    <updated>2020-01-04T06:38:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/566" target="_blank" rel="noopener">#566</a></strong></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ul><li><a href="https://github.com/onmyway133/FantasticDisplay" target="_blank" rel="noopener">FantasticDisplay</a></li></ul><h2 id="Create-a-container-that-has-blur-effect"><a href="#Create-a-container-that-has-blur-effect" class="headerlink" title="Create a container that has blur effect"></a>Create a container that has blur effect</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HUDContainer</span>: <span class="title">UIVisualEffectView</span>, <span class="title">AnimationAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> innerContentView: <span class="type">UIView</span> &amp; <span class="type">AnimationAware</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> label = <span class="type">UILabel</span>()</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> text: <span class="type">String?</span> &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            label.text = text</span><br><span class="line">            label.sizeToFit()</span><br><span class="line">            label.isHidden = text == <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">init</span>(contentView: <span class="type">UIView</span> &amp; <span class="type">AnimationAware</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.innerContentView = contentView</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(effect: <span class="type">UIBlurEffect</span>(style: .light))</span><br><span class="line">        <span class="keyword">self</span>.contentView.addSubview(innerContentView)</span><br><span class="line">        <span class="keyword">self</span>.contentView.addSubview(label)</span><br><span class="line"></span><br><span class="line">        innerContentView.pinEdgesToSuperview()</span><br><span class="line">        configure()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">required</span> <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="built_in">fatalError</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">configure</span><span class="params">()</span></span> &#123;</span><br><span class="line">        layer.cornerRadius = <span class="number">8</span></span><br><span class="line">        layer.masksToBounds = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">        label.isHidden = <span class="literal">false</span></span><br><span class="line">        label.font = <span class="type">UIFont</span>.preferredFont(forTextStyle: .body)</span><br><span class="line">        label.textColor = <span class="type">UIColor</span>.black</span><br><span class="line">        label.textAlignment = .center</span><br><span class="line">        label.translatesAutoresizingMaskIntoConstraints = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">        <span class="type">NSLayoutConstraint</span>.activate([</span><br><span class="line">            label.bottomAnchor.constraint(equalTo: contentView.bottomAnchor, constant: -<span class="number">8</span>),</span><br><span class="line">            label.leftAnchor.constraint(equalTo: contentView.leftAnchor, constant: <span class="number">10</span>),</span><br><span class="line">            label.rightAnchor.constraint(equalTo: contentView.rightAnchor, constant: -<span class="number">10</span>),</span><br><span class="line">        ])</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">startAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        innerContentView.startAnimation()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">endAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        innerContentView.stopAnimation()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Make-error-view-with-2-cross-lines"><a href="#Make-error-view-with-2-cross-lines" class="headerlink" title="Make error view with 2 cross lines"></a>Make error view with 2 cross lines</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorView</span>: <span class="title">UIView</span>, <span class="title">AnimationAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> line1 = <span class="type">CAShapeLayer</span>()</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> line2 = <span class="type">CAShapeLayer</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> animation1 = <span class="type">CASpringAnimation</span>(keyPath: #keyPath(<span class="type">CALayer</span>.transform))</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> animation2 = <span class="type">CASpringAnimation</span>(keyPath: #keyPath(<span class="type">CALayer</span>.transform))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> lineColor: <span class="type">UIColor</span> = <span class="type">UIColor</span>.darkGray</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> duration: <span class="type">TimeInterval</span> = <span class="number">0.75</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        layer.addSublayer(line1)</span><br><span class="line">        layer.addSublayer(line2)</span><br><span class="line">        configure()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">required</span> <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="built_in">fatalError</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">layoutSubviews</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.layoutSubviews()</span><br><span class="line"></span><br><span class="line">        configureSize()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">configure</span><span class="params">()</span></span> &#123;</span><br><span class="line">        [line1, line2].forEach &#123;</span><br><span class="line">            $<span class="number">0</span>.backgroundColor = lineColor.cgColor</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [animation1, animation2].forEach &#123;</span><br><span class="line">            $<span class="number">0</span>.fromValue = <span class="number">0</span></span><br><span class="line">            $<span class="number">0</span>.damping = <span class="number">0.33</span></span><br><span class="line">            $<span class="number">0</span>.initialVelocity = <span class="number">0.01</span></span><br><span class="line">            $<span class="number">0</span>.mass = <span class="number">0.2</span></span><br><span class="line">            $<span class="number">0</span>.duration = duration</span><br><span class="line">            $<span class="number">0</span>.valueFunction = <span class="type">CAValueFunction</span>(name: <span class="type">CAValueFunctionName</span>.rotateZ)</span><br><span class="line">            $<span class="number">0</span>.timingFunction = <span class="type">CAMediaTimingFunction</span>(name: .easeIn)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        animation1.toValue = <span class="type">CGFloat</span>.pi / <span class="number">4</span></span><br><span class="line">        animation2.toValue = -<span class="type">CGFloat</span>.pi / <span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">configureSize</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> line1.frame.width &lt;= <span class="number">0</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [line1, line2].forEach &#123;</span><br><span class="line">            $<span class="number">0</span>.cornerRadius = <span class="number">3</span></span><br><span class="line">            $<span class="number">0</span>.frame.size = <span class="type">CGSize</span>(width: bounds.width*<span class="number">0.6</span>, height: <span class="number">6</span>)</span><br><span class="line">            $<span class="number">0</span>.position = layer.position</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">didMoveToWindow</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.didMoveToWindow()</span><br><span class="line"></span><br><span class="line">        line1.transform = <span class="type">CATransform3DIdentity</span></span><br><span class="line">        line2.transform = <span class="type">CATransform3DIdentity</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">startAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        line1.transform = <span class="type">CATransform3DMakeRotation</span>(<span class="type">CGFloat</span>.pi/<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1.0</span>)</span><br><span class="line">        line2.transform = <span class="type">CATransform3DMakeRotation</span>(-<span class="type">CGFloat</span>.pi/<span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line">        line1.add(animation1, forKey: <span class="literal">nil</span>)</span><br><span class="line">        line2.add(animation2, forKey: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">stopAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        line1.removeAllAnimations()</span><br><span class="line">        line2.removeAllAnimations()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Make-loading-progress-using-replicator-layers"><a href="#Make-loading-progress-using-replicator-layers" class="headerlink" title="Make loading progress using replicator layers"></a>Make loading progress using replicator layers</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProgressView</span>: <span class="title">UIView</span>, <span class="title">AnimationAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> replicatorLayer = <span class="type">CAReplicatorLayer</span>()</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> animation = <span class="type">CABasicAnimation</span>(keyPath: #keyPath(<span class="type">CALayer</span>.opacity))</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> line = <span class="type">CALayer</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> lineCount: <span class="type">Int</span> = <span class="number">12</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> duration: <span class="type">TimeInterval</span> = <span class="number">1.0</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> lineSize: <span class="type">CGSize</span> = <span class="type">CGSize</span>(width: <span class="number">20</span>, height: <span class="number">6</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> lineColor: <span class="type">UIColor</span> = <span class="type">UIColor</span>.darkGray</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: .zero)</span><br><span class="line"></span><br><span class="line">        configure()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">required</span> <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="built_in">fatalError</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">configure</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> angle = <span class="type">CGFloat</span>.pi * <span class="number">2</span> / <span class="type">CGFloat</span>(lineCount)</span><br><span class="line">        <span class="keyword">let</span> rotation = <span class="type">CATransform3DMakeRotation</span>(angle, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1.0</span>)</span><br><span class="line"></span><br><span class="line">        replicatorLayer.instanceTransform = rotation</span><br><span class="line">        replicatorLayer.instanceCount = lineCount</span><br><span class="line">        replicatorLayer.instanceDelay = duration / <span class="type">TimeInterval</span>(lineCount)</span><br><span class="line"></span><br><span class="line">        line.backgroundColor = lineColor.cgColor</span><br><span class="line">        line.frame.size = lineSize</span><br><span class="line">        line.cornerRadius = lineSize.height / <span class="number">2</span></span><br><span class="line"></span><br><span class="line">        animation.fromValue = <span class="number">1.0</span></span><br><span class="line">        animation.toValue = <span class="number">0.0</span></span><br><span class="line">        animation.repeatCount = <span class="type">Float</span>.greatestFiniteMagnitude</span><br><span class="line">        animation.timingFunction = <span class="type">CAMediaTimingFunction</span>(name: .linear)</span><br><span class="line">        animation.duration = duration</span><br><span class="line"></span><br><span class="line">        replicatorLayer.addSublayer(line)</span><br><span class="line">        layer.addSublayer(replicatorLayer)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// x: the larger, the closer to center</span></span><br><span class="line">        <span class="comment">// y: half the height, changing affects rotation of lines</span></span><br><span class="line">        line.position = <span class="type">CGPoint</span>(x: <span class="number">48</span>, y: <span class="number">75</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">layoutSubviews</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.layoutSubviews()</span><br><span class="line"></span><br><span class="line">        replicatorLayer.frame = bounds</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">startAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        line.add(animation, forKey: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">stopAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        line.removeAllAnimations()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Make-success-view-with-check-mark-animation"><a href="#Make-success-view-with-check-mark-animation" class="headerlink" title="Make success view with check mark animation"></a>Make success view with check mark animation</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuccessView</span>: <span class="title">UIView</span>, <span class="title">AnimationAware</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> shapeLayer = <span class="type">CAShapeLayer</span>()</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">let</span> animation = <span class="type">CABasicAnimation</span>(keyPath: #keyPath(<span class="type">CAShapeLayer</span>.strokeEnd))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> lineColor: <span class="type">UIColor</span> = <span class="type">UIColor</span>.darkGray</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> duration: <span class="type">TimeInterval</span> = <span class="number">0.25</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        layer.addSublayer(shapeLayer)</span><br><span class="line">        configure()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">required</span> <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="built_in">fatalError</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">layoutSubviews</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.layoutSubviews()</span><br><span class="line"></span><br><span class="line">        configurePath()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">configure</span><span class="params">()</span></span> &#123;</span><br><span class="line">        shapeLayer.lineCap = .round</span><br><span class="line">        shapeLayer.lineJoin = .round</span><br><span class="line">        shapeLayer.fillColor = <span class="literal">nil</span></span><br><span class="line">        shapeLayer.strokeColor = lineColor.cgColor</span><br><span class="line">        shapeLayer.lineWidth = <span class="number">6</span></span><br><span class="line"></span><br><span class="line">        animation.timingFunction = <span class="type">CAMediaTimingFunction</span>(name: .easeIn)</span><br><span class="line">        animation.fromValue = <span class="number">0.0</span></span><br><span class="line">        animation.toValue = <span class="number">1.0</span></span><br><span class="line">        animation.duration = duration</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">configurePath</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> size = <span class="type">CGSize</span>(width: <span class="number">80</span>, height: <span class="number">60</span>)</span><br><span class="line">        shapeLayer.frame = <span class="type">CGRect</span>(origin: .zero, size: size)</span><br><span class="line">        shapeLayer.position = layer.position</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> path = <span class="type">UIBezierPath</span>()</span><br><span class="line">        path.move(to: <span class="type">CGPoint</span>(x: size.width * <span class="number">0</span>, y: size.height * <span class="number">0.48</span>))</span><br><span class="line">        path.addLine(to: <span class="type">CGPoint</span>(x: size.width * <span class="number">0.38</span>, y: size.height))</span><br><span class="line">        path.addLine(to: <span class="type">CGPoint</span>(x: size.width, y: size.height * <span class="number">0.01</span>))</span><br><span class="line"></span><br><span class="line">        shapeLayer.path = path.cgPath</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">didMoveToWindow</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.didMoveToWindow()</span><br><span class="line"></span><br><span class="line">        shapeLayer.strokeEnd = <span class="number">0.0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">startAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        shapeLayer.strokeEnd = <span class="number">1.0</span></span><br><span class="line">        shapeLayer.add(animation, forKey: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">stopAnimation</span><span class="params">()</span></span> &#123;</span><br><span class="line">        shapeLayer.removeAllAnimations()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/566&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#566&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>How to specify year in date formatter in Swift</title>
    <link href="https://onmyway133.github.io/blog/How-to-specify-year-in-date-formatter-in-Swift/"/>
    <id>https://onmyway133.github.io/blog/How-to-specify-year-in-date-formatter-in-Swift/</id>
    <published>2020-01-03T07:21:42.000Z</published>
    <updated>2020-01-03T07:21:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/565" target="_blank" rel="noopener">#565</a></strong></p><ul><li><a href="https://nakedsecurity.sophos.com/2019/12/23/serious-security-the-decade-ending-y2k-bug-that-wasnt/" target="_blank" rel="noopener">Serious Security: The decade-ending Y2K bug that wasnt</a></li><li><a href="https://jayeshkawli.ghost.io/challenges-of-dateformatters/" target="_blank" rel="noopener">Challenges of DateFormatters</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/565&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#565&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>How to build static site using Publish</title>
    <link href="https://onmyway133.github.io/blog/How-to-build-static-site-using-Publish/"/>
    <id>https://onmyway133.github.io/blog/How-to-build-static-site-using-Publish/</id>
    <published>2020-01-02T21:24:42.000Z</published>
    <updated>2020-01-02T21:24:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/564" target="_blank" rel="noopener">#564</a></strong></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ul><li><a href="https://github.com/JohnSundell/publish" target="_blank" rel="noopener">https://github.com/JohnSundell/publish</a></li><li>Example <a href="https://github.com/pumaswift/pumaswift.github.io" target="_blank" rel="noopener">https://github.com/pumaswift/pumaswift.github.io</a></li></ul><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><p>Step 1: Create executable</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift package init --type executable</span><br></pre></td></tr></table></figure><p>Step 2: Edit package</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// swift-tools-version:5.1</span></span><br><span class="line"><span class="comment">// The swift-tools-version declares the minimum version of Swift required to build this package.</span></span><br><span class="line"><span class="keyword">import</span> PackageDescription</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> package = <span class="type">Package</span>(</span><br><span class="line">    name: <span class="string">"PumaSwiftWeb"</span>,</span><br><span class="line">    dependencies: [</span><br><span class="line">        .package(url: <span class="string">"https://github.com/johnsundell/publish.git"</span>, from: <span class="string">"0.1.0"</span>)</span><br><span class="line">    ],</span><br><span class="line">    targets: [</span><br><span class="line">        .target(</span><br><span class="line">            name: <span class="string">"PumaSwiftWeb"</span>,</span><br><span class="line">            dependencies: [</span><br><span class="line">            <span class="string">"Publish"</span></span><br><span class="line">        ]</span><br><span class="line">        )</span><br><span class="line">    ]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>Step 3: Double click Package.swift, Xcode opens that in a generated project<br>Step 4: Declare website. Go to Sources/main.swift</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Publish</span><br><span class="line"><span class="keyword">import</span> Plot</span><br><span class="line"><span class="keyword">import</span> Ink</span><br><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PumaSwiftWeb</span>: <span class="title">Website</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">SectionID</span>: <span class="title">String</span>, <span class="title">WebsiteSectionID</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> gettingStarted</span><br><span class="line">        <span class="keyword">case</span> workflow</span><br><span class="line">        <span class="keyword">case</span> tasks</span><br><span class="line">        <span class="keyword">case</span> about</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">ItemMetadata</span>: <span class="title">WebsiteItemMetadata</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> url = <span class="type">URL</span>(string: <span class="string">"https://pumaswift.github.io"</span>)!</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">"Puma Swift"</span></span><br><span class="line">    <span class="keyword">var</span> description = <span class="string">"Build utilities in pure Swift"</span></span><br><span class="line">    <span class="keyword">var</span> language: <span class="type">Language</span> &#123; .english &#125;</span><br><span class="line">    <span class="keyword">var</span> imagePath: <span class="type">Path?</span> &#123; <span class="string">"https://avatars2.githubusercontent.com/u/54233247?s=200&amp;v=4"</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> <span class="type">PumaSwiftWeb</span>()</span><br><span class="line">    .publish(withTheme: .foundation)</span><br></pre></td></tr></table></figure><p>Step 5: Create Content folder<br>Step 6: <code>swift run</code><br>Step 7: Copy Output to root and push to GitHub</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/564&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#564&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>How to use  iTMSTransporter</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-iTMSTransporter/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-iTMSTransporter/</id>
    <published>2020-01-01T13:21:28.000Z</published>
    <updated>2020-01-01T19:09:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/563" target="_blank" rel="noopener">#563</a></strong></p><h2 id="Transporter-app"><a href="#Transporter-app" class="headerlink" title="Transporter app"></a>Transporter app</h2><ul><li><a href="https://developer.apple.com/news/?id=10152019a" target="_blank" rel="noopener">Transporter Now Available on the Mac App Store</a></li></ul><blockquote><p>The new Transporter app for macOS makes it easy to upload your binary to App Store Connect. To get started, download Transporter from the Mac App Store, and simply drag and drop your binaries into the upload window. With Transporter you can</p></blockquote><p><a href="https://stackoverflow.com/questions/8094317/where-to-find-application-loader-app-in-mac/40419328" target="_blank" rel="noopener">https://stackoverflow.com/questions/8094317/where-to-find-application-loader-app-in-mac/40419328</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">As of Xcode 11, &quot;Application Loader is no longer included with Xcode&quot;, per the Xcode 11 Release Notes:</span><br><span class="line"></span><br><span class="line">Xcode supports uploading apps from the Organizer window or from the command line with xcodebuild or xcrun altool. Application Loader is no longer included with Xcode. (29008875)</span><br><span class="line"></span><br><span class="line">The Xcode Help page, Upload an app to App Store Connect, explains how to upload from the Xcode Archives Organizer.</span><br><span class="line"></span><br><span class="line">Transporter</span><br><span class="line">In October 2019, Apple announced the Transporter app for macOS, now available in the Mac App Store.</span><br></pre></td></tr></table></figure><h2 id="Find-path"><a href="#Find-path" class="headerlink" title="Find path"></a>Find path</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">struct</span> <span class="title">Transporter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arguments: [<span class="type">String</span>] = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">run</span><span class="params">(workflow: Workflow)</span></span> <span class="keyword">throws</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="type">Folder</span>.directoryExists(path: <span class="string">"/Applications/Transporter.app"</span>) <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Deps</span>.console.warn(<span class="string">"You need to install Transporter"</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="type">PumaError</span>.invalid</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> <span class="type">CommandLine</span>().runBash(</span><br><span class="line">            workflow: workflow,</span><br><span class="line">            program: transportPath(),</span><br><span class="line">            arguments: arguments</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">transportPath</span><span class="params">()</span></span> <span class="keyword">throws</span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="type">Folder</span>.directoryExists(path: <span class="string">"/Applications/Transporter.app"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"/Applications/Transporter.app/Contents/itms/bin/iTMSTransporter"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="type">Folder</span>.directoryExists(path: <span class="string">"/Applications/Xcode.app/Contents/Applications/Application Loader.app/"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/MacOS/itms/bin/iTMSTransporter"</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="type">PumaError</span>.invalid</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Help"><a href="#Help" class="headerlink" title="Help"></a>Help</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">usage: iTMSTransporter [-help &lt;arg&gt; | -info | -m &lt;arg&gt; | -version]   [-o &lt;arg&gt;] [-v</span><br><span class="line">       &lt;arg&gt;]  [-WONoPause &lt;arg&gt;] [-Xmx4096m]</span><br><span class="line">iTMSTransporter : iTunes Store Transporter 2.0.0</span><br><span class="line"> -help &lt;arg&gt;        Show this help.  If a mode value is specified, show help specific</span><br><span class="line">                    to that mode.</span><br><span class="line"> -info              The -info option should be used by itself and returns the</span><br><span class="line">                    copyright notice and acknowledgements.</span><br><span class="line"> -m &lt;arg&gt;           The -m option specifies the tool&apos;s mode.  The valid values are:</span><br><span class="line">                    verify, upload, provider, diagnostic, lookupMetadata,</span><br><span class="line">                    createArtist, lookupArtist, status, statusAll,</span><br><span class="line">                    createMetadataTicket, queryTickets, generateSchema, transferTest,</span><br><span class="line">                    downloadMetadataGuides, listReports, requestReport</span><br><span class="line"> -o &lt;arg&gt;           The -o option specifies the directory and filename you want to use</span><br><span class="line">                    to log output information.  By default, Transporter logs output</span><br><span class="line">                    information to standard out. If you specify a filename,</span><br><span class="line">                    Transporter logs the output to the specified file, as well as to</span><br><span class="line">                    standard out.</span><br><span class="line"> -v &lt;arg&gt;           The -v option specifies the level of logging.  The five values</span><br><span class="line">                    are: off, detailed, informational, critical, eXtreme.</span><br><span class="line"> -version           The -version option should be used by itself and returns the</span><br><span class="line">                    version of the tool.</span><br><span class="line"> -WONoPause &lt;arg&gt;   The -WONoPause option is only valid on Windows and its value can</span><br><span class="line">                    be &apos;true&apos; or &apos;false&apos;.  If an error occurs during script execution,</span><br><span class="line">                    the process idles because the message &apos;Press any key...&apos; is</span><br><span class="line">                    displayed on the console and the system awaits a keypress. To</span><br><span class="line">                    avoid this behavior, set this property to true</span><br><span class="line"> -Xmx4096m          Specifies that you want to change the Java Virtual Machine&apos;s (JVM)</span><br><span class="line">                    allocated memory by increasing the JVM heap size.  By default,</span><br><span class="line">                    Transporter uses a 2048MB heap size. You can use the -Xmx4096m</span><br><span class="line">                    option to specify a 4-gigabyte (GB) heap size. Apple recommends,</span><br><span class="line">                    if needed, increasing the heap size to 4096MB by specifying the</span><br><span class="line">                    -Xmx4096m (or -Xmx4g) option and adjusting as needed.</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://bou.io/UploadingScreenshotsWithITMSTransporter.html" target="_blank" rel="noopener">https://bou.io/UploadingScreenshotsWithITMSTransporter.html</a></li><li><a href="https://itunespartner.apple.com/en/movies/faq/Transporter_Getting%20Set%20Up" target="_blank" rel="noopener">https://itunespartner.apple.com/en/movies/faq/Transporter_Getting%20Set%20Up</a></li><li><a href="https://gist.github.com/michaeltyson/0e82e24e5a3a7a42a6ad" target="_blank" rel="noopener">https://gist.github.com/michaeltyson/0e82e24e5a3a7a42a6ad</a></li><li><a href="https://medium.com/ynap-tech/using-apples-itms-transporter-api-to-upload-builds-to-testflight-60dba18b07bc" target="_blank" rel="noopener">https://medium.com/ynap-tech/using-apples-itms-transporter-api-to-upload-builds-to-testflight-60dba18b07bc</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/563&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#563&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="terminal" scheme="https://onmyway133.github.io/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>How to use Timer and RunLoop in Swift</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-Timer-and-RunLoop-in-Swift/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-Timer-and-RunLoop-in-Swift/</id>
    <published>2020-01-01T12:22:12.000Z</published>
    <updated>2020-01-01T12:24:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/562" target="_blank" rel="noopener">#562</a></strong></p><h2 id="Run-Timer-in-command-line-application"><a href="#Run-Timer-in-command-line-application" class="headerlink" title="Run Timer in command line application"></a>Run Timer in command line application</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Timer</span>.scheduledTimer(withTimeInterval: seconds, repeats: <span class="literal">false</span>, block: &#123; <span class="number">_</span> <span class="keyword">in</span></span><br><span class="line">    completion(.success(()))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="type">RunLoop</span>.current.run()</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://www.hackingwithswift.com/articles/117/the-ultimate-guide-to-timer" target="_blank" rel="noopener">https://www.hackingwithswift.com/articles/117/the-ultimate-guide-to-timer</a></li><li><a href="https://learnappmaking.com/timer-swift-how-to/" target="_blank" rel="noopener">https://learnappmaking.com/timer-swift-how-to/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/562&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#562&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>How to use safeAreaInsets in iOS</title>
    <link href="https://onmyway133.github.io/blog/How-to-use-safeAreaInsets-in-iOS/"/>
    <id>https://onmyway133.github.io/blog/How-to-use-safeAreaInsets-in-iOS/</id>
    <published>2019-12-30T14:58:11.000Z</published>
    <updated>2020-01-16T13:50:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/561" target="_blank" rel="noopener">#561</a></strong></p><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://medium.com/rosberryapps/ios-safe-area-ca10e919526f" target="_blank" rel="noopener">https://medium.com/rosberryapps/ios-safe-area-ca10e919526f</a></li><li><a href="https://blog.smartnsoft.com/layout-guide-margins-insets-and-safe-area-demystified-on-ios-10-11-d6e7246d7cb8" target="_blank" rel="noopener">https://blog.smartnsoft.com/layout-guide-margins-insets-and-safe-area-demystified-on-ios-10-11-d6e7246d7cb8</a></li><li><a href="https://www.matrixprojects.net/p/safe-area-insets/" target="_blank" rel="noopener">https://www.matrixprojects.net/p/safe-area-insets/</a></li><li><a href="https://stackoverflow.com/questions/37796884/on-ios-what-are-the-differences-between-margins-edge-insets-content-insets-a/47614397" target="_blank" rel="noopener">https://stackoverflow.com/questions/37796884/on-ios-what-are-the-differences-between-margins-edge-insets-content-insets-a/47614397</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/561&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#561&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://onmyway133.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>How to send message from bot to Slack in Swift</title>
    <link href="https://onmyway133.github.io/blog/How-to-send-message-from-bot-to-Slack-in-Swift/"/>
    <id>https://onmyway133.github.io/blog/How-to-send-message-from-bot-to-Slack-in-Swift/</id>
    <published>2019-12-30T09:46:38.000Z</published>
    <updated>2019-12-30T10:22:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Issue <a href="https://github.com/onmyway133/blog/issues/560" target="_blank" rel="noopener">#560</a></strong></p><h2 id="Create-a-bot"><a href="#Create-a-bot" class="headerlink" title="Create a bot"></a>Create a bot</h2><ul><li><a href="https://slack.com/intl/en-no/help/articles/115005265703-create-a-bot-for-your-workspace" target="_blank" rel="noopener">https://slack.com/intl/en-no/help/articles/115005265703-create-a-bot-for-your-workspace</a></li><li><a href="https://api.slack.com/bot-users#setup-events-api" target="_blank" rel="noopener">https://api.slack.com/bot-users#setup-events-api</a></li><li><a href="https://api.slack.com/bot-users#installing-bot" target="_blank" rel="noopener">https://api.slack.com/bot-users#installing-bot</a></li></ul><h2 id="Post-message"><a href="#Post-message" class="headerlink" title="Post message"></a>Post message</h2><p>After adding bot to workspace, we’ll get OAuth Access Token and Bot User OAuth Access Token. Use Bot User OAuth Access Token to test drive bot message sending</p><p><a href="https://api.slack.com/methods/chat.postMessage/test" target="_blank" rel="noopener">https://api.slack.com/methods/chat.postMessage/test</a></p><p>The request url is like</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://slack.com/api/chat.postMessage?token=xoxb-7212342835698-890815481123-abcdGgDEFfm2joQs1Vj5mABC&amp;channel=random&amp;text=hello&amp;pretty=1</span><br></pre></td></tr></table></figure><p>Code from <a href="https://github.com/pumaswift/Puma" target="_blank" rel="noopener">Puma</a></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Foundation</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Slack</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> name: <span class="type">String</span> = <span class="string">"Send message to Slack"</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">var</span> isEnabled = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> message: <span class="type">Message?</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">init</span>(<span class="number">_</span> closure: (<span class="type">Slack</span>) -&gt; <span class="type">Void</span> = &#123; <span class="number">_</span> <span class="keyword">in</span> &#125;) &#123;</span><br><span class="line">        closure(<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">extension</span> <span class="title">Slack</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Message</span> </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> token: <span class="type">String</span></span><br><span class="line">        <span class="keyword">let</span> channel: <span class="type">String</span></span><br><span class="line">        <span class="keyword">let</span> text: <span class="type">String</span></span><br><span class="line">        <span class="keyword">let</span> username: <span class="type">String?</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">init</span>(</span><br><span class="line">            token: <span class="type">String</span>,</span><br><span class="line">            channel: <span class="type">String</span>,</span><br><span class="line">            text: <span class="type">String</span>,</span><br><span class="line">            username: <span class="type">String</span></span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="keyword">self</span>.token = token</span><br><span class="line">            <span class="keyword">self</span>.channel = channel</span><br><span class="line">            <span class="keyword">self</span>.text = text</span><br><span class="line">            <span class="keyword">self</span>.username = username</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">post</span><span class="params">(message: Message)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.message = message</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Slack</span>: <span class="title">Task</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">run</span><span class="params">(workflow: Workflow, completion: @escaping TaskCompletion)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> message = message <span class="keyword">else</span> &#123;</span><br><span class="line">            completion(.failure(<span class="type">PumaError</span>.invalid))</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> sender = <span class="type">MessageSender</span>()</span><br><span class="line">        sender.send(message: message, completion: &#123; result <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">switch</span> result &#123;</span><br><span class="line">            <span class="keyword">case</span> .success:</span><br><span class="line">                <span class="type">Deps</span>.console.success(<span class="string">"Message posted successfully"</span>)</span><br><span class="line">            <span class="keyword">case</span> .failure(<span class="keyword">let</span> error):</span><br><span class="line">                <span class="type">Deps</span>.console.error(<span class="string">"Failed: \(error.localizedDescription)"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            completion(result)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageSender</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Response</span>: <span class="title">Decodable</span> </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> ok: <span class="type">Bool</span></span><br><span class="line">        <span class="keyword">let</span> error: <span class="type">String?</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">send</span><span class="params">(message: Slack.Message, completion: @escaping <span class="params">(Result&lt;<span class="params">()</span></span></span></span>, <span class="type">Error</span>&gt;) -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> baseUrl = <span class="type">URL</span>(string: <span class="string">"https://slack.com/api/chat.postMessage"</span>) <span class="keyword">else</span> &#123;</span><br><span class="line">            completion(.failure(<span class="type">PumaError</span>.invalid))</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> components = <span class="type">URLComponents</span>(url: baseUrl, resolvingAgainstBaseURL: <span class="literal">false</span>)</span><br><span class="line">        components?.queryItems = [</span><br><span class="line">            <span class="type">URLQueryItem</span>(name: <span class="string">"token"</span>, value: message.token),</span><br><span class="line">            <span class="type">URLQueryItem</span>(name: <span class="string">"channel"</span>, value: message.channel),</span><br><span class="line">            <span class="type">URLQueryItem</span>(name: <span class="string">"text"</span>, value: message.text),</span><br><span class="line">            <span class="type">URLQueryItem</span>(name: <span class="string">"pretty"</span>, value: <span class="string">"1"</span>)</span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> username = message.username &#123;</span><br><span class="line">            components?.queryItems?.append(</span><br><span class="line">                <span class="type">URLQueryItem</span>(name: <span class="string">"username"</span>, value: username)</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> requestUrl = components?.url <span class="keyword">else</span> &#123;</span><br><span class="line">            completion(.failure(<span class="type">PumaError</span>.invalid))</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> request = <span class="type">URLRequest</span>(url: requestUrl)</span><br><span class="line">        request.allHTTPHeaderFields = [</span><br><span class="line">            <span class="string">"Accept"</span>: <span class="string">"application/json"</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> task = <span class="type">URLSession</span>.shared.dataTask(with: request, completionHandler: &#123; data, response, error <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> data = data <span class="keyword">else</span> &#123;</span><br><span class="line">                completion(.failure(error ?? <span class="type">PumaError</span>.invalid))</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> response = <span class="keyword">try</span> <span class="type">JSONDecoder</span>().decode(<span class="type">Response</span>.<span class="keyword">self</span>, from: data)</span><br><span class="line">                <span class="keyword">if</span> response.ok &#123;</span><br><span class="line">                    completion(.success(()))</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    completion(.failure(<span class="type">PumaError</span>.from(string: response.error)))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">                completion(.failure(error))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        task.resume()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Read-more"><a href="#Read-more" class="headerlink" title="Read more"></a>Read more</h2><ul><li><a href="https://github.com/onmyway133/slackbot-yoda" target="_blank" rel="noopener">slackbot-yoda</a> Slack bot in Nodejs</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;&lt;strong&gt;Issue &lt;a href=&quot;https://github.com/onmyway133/blog/issues/560&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;#560&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
    
    
      <category term="swift" scheme="https://onmyway133.github.io/tags/swift/"/>
    
  </entry>
  
</feed>
